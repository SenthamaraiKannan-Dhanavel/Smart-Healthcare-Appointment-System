Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:63939][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:63939][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:63939][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:63939][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:63939][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:63939][0m
Fetching available slots for doctor 2 on 2024-09-10
Parsed date: 2024-09-10
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-10 09:00:00-19:00:00>, <DoctorAvailability: doctor1 - 2024-09-10 17:00:00-18:00:00>]>
Existing appointments: <QuerySet [<Appointment: patient1 - doctor1 - 2024-09-10 11:30:00+00:00>]>
All slots: [{'time': '09:00', 'available': True}, {'time': '09:30', 'available': True}, {'time': '10:00', 'available': True}, {'time': '10:30', 'available': True}, {'time': '11:00', 'available': True}, {'time': '11:30', 'available': False}, {'time': '12:00', 'available': True}, {'time': '12:30', 'available': True}, {'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': False}, {'time': '17:30', 'available': False}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}]
Available slots: ['09:00', '09:30', '10:00', '10:30', '11:00', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '18:00', '18:30']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-10/ 200 [0.02, 127.0.0.1:63939][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-10/ 200 [0.02, 127.0.0.1:63939][0m
Attempting to book appointment: Doctor: doctor1, Date: 2024-09-10 10:00:00+00:00
Availability found: doctor1 - 2024-09-10 09:00:00-19:00:00
Existing appointment found: False
Appointment booked successfully: patient1 - doctor1 - 2024-09-10 10:00:00+00:00
Sending booking confirmation email to gibive@polkaroad.net
Email sent successfully to ['gibive@polkaroad.net']
[mHTTP POST /api/users/book-appointment/ 201 [0.76, 127.0.0.1:63939][0m
[mHTTP POST /api/users/book-appointment/ 201 [0.76, 127.0.0.1:63939][0m
Fetching available slots for doctor 2 on 2024-09-10
Parsed date: 2024-09-10
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-10 09:00:00-19:00:00>, <DoctorAvailability: doctor1 - 2024-09-10 17:00:00-18:00:00>]>
Existing appointments: <QuerySet [<Appointment: patient1 - doctor1 - 2024-09-10 11:30:00+00:00>, <Appointment: patient1 - doctor1 - 2024-09-10 10:00:00+00:00>]>
All slots: [{'time': '09:00', 'available': True}, {'time': '09:30', 'available': True}, {'time': '10:00', 'available': False}, {'time': '10:30', 'available': True}, {'time': '11:00', 'available': True}, {'time': '11:30', 'available': False}, {'time': '12:00', 'available': True}, {'time': '12:30', 'available': True}, {'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': False}, {'time': '17:30', 'available': False}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}]
Available slots: ['09:00', '09:30', '10:30', '11:00', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '18:00', '18:30']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-10/ 200 [0.04, 127.0.0.1:63939][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-10/ 200 [0.04, 127.0.0.1:63939][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:63947][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:63947][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:63949]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:63949]
WebSocket REJECT /ws/appointments/ [127.0.0.1:63949]
WebSocket REJECT /ws/appointments/ [127.0.0.1:63949]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:63949]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:63949]
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:63947][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:63947][0m
[mHTTP POST /api/users/register/ 201 [0.27, 127.0.0.1:63947][0m
[mHTTP POST /api/users/register/ 201 [0.27, 127.0.0.1:63947][0m
[mHTTP POST /api/users/login/ 200 [0.28, 127.0.0.1:63947][0m
[mHTTP POST /api/users/login/ 200 [0.28, 127.0.0.1:63947][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:63947][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:63947][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:63960]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:63960]
WebSocket REJECT /ws/appointments/ [127.0.0.1:63960]
WebSocket REJECT /ws/appointments/ [127.0.0.1:63960]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:63960]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:63960]
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:63947][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:63947][0m
[mHTTP POST /api/users/register/ 201 [0.25, 127.0.0.1:63947][0m
[mHTTP POST /api/users/register/ 201 [0.25, 127.0.0.1:63947][0m
[mHTTP POST /api/users/login/ 200 [0.28, 127.0.0.1:63947][0m
[mHTTP POST /api/users/login/ 200 [0.28, 127.0.0.1:63947][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.01, 127.0.0.1:63947][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.01, 127.0.0.1:63947][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:63969]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:63969]
WebSocket REJECT /ws/appointments/ [127.0.0.1:63969]
WebSocket REJECT /ws/appointments/ [127.0.0.1:63969]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:63969]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:63969]
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:63947][0m
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:63947][0m
[mHTTP POST /api/users/doctor-availability/ 201 [0.02, 127.0.0.1:63947][0m
[mHTTP POST /api/users/doctor-availability/ 201 [0.02, 127.0.0.1:63947][0m
[mHTTP POST /api/users/doctor-availability/ 201 [0.02, 127.0.0.1:63947][0m
[mHTTP POST /api/users/doctor-availability/ 201 [0.02, 127.0.0.1:63947][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.01, 127.0.0.1:63947][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.01, 127.0.0.1:63947][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:63971]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:63971]
WebSocket REJECT /ws/appointments/ [127.0.0.1:63971]
WebSocket REJECT /ws/appointments/ [127.0.0.1:63971]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:63971]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:63971]
[mHTTP POST /api/users/login/ 200 [0.28, 127.0.0.1:63947][0m
[mHTTP POST /api/users/login/ 200 [0.28, 127.0.0.1:63947][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:63947][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:63947][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:63973]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:63973]
WebSocket REJECT /ws/appointments/ [127.0.0.1:63973]
WebSocket REJECT /ws/appointments/ [127.0.0.1:63973]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:63973]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:63973]
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:63947][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:63947][0m
[mHTTP OPTIONS /api/users/doctors-by-specialty/?specialty=2 200 [0.00, 127.0.0.1:63947][0m
[mHTTP OPTIONS /api/users/doctors-by-specialty/?specialty=2 200 [0.00, 127.0.0.1:63947][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:63947][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:63947][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.00, 127.0.0.1:63947][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.00, 127.0.0.1:63947][0m
Fetching available slots for doctor 5 on 2024-09-10
Parsed date: 2024-09-10
Doctor availabilities: <QuerySet [<DoctorAvailability: iamdoctor - 2024-09-10 09:00:00-19:00:00>, <DoctorAvailability: iamdoctor - 2024-09-10 17:00:00-18:30:00>]>
Existing appointments: <QuerySet []>
All slots: [{'time': '09:00', 'available': True}, {'time': '09:30', 'available': True}, {'time': '10:00', 'available': True}, {'time': '10:30', 'available': True}, {'time': '11:00', 'available': True}, {'time': '11:30', 'available': True}, {'time': '12:00', 'available': True}, {'time': '12:30', 'available': True}, {'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': False}, {'time': '17:30', 'available': False}, {'time': '18:00', 'available': False}, {'time': '18:30', 'available': True}]
Available slots: ['09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '18:30']
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.02, 127.0.0.1:63947][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.02, 127.0.0.1:63947][0m
Attempting to book appointment: Doctor: iamdoctor, Date: 2024-09-10 11:30:00+00:00
Availability found: iamdoctor - 2024-09-10 09:00:00-19:00:00
Existing appointment found: False
Appointment booked successfully: iampatient - iamdoctor - 2024-09-10 11:30:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [0.70, 127.0.0.1:63947][0m
[mHTTP POST /api/users/book-appointment/ 201 [0.70, 127.0.0.1:63947][0m
Fetching available slots for doctor 5 on 2024-09-10
Parsed date: 2024-09-10
Doctor availabilities: <QuerySet [<DoctorAvailability: iamdoctor - 2024-09-10 09:00:00-19:00:00>, <DoctorAvailability: iamdoctor - 2024-09-10 17:00:00-18:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - iamdoctor - 2024-09-10 11:30:00+00:00>]>
All slots: [{'time': '09:00', 'available': True}, {'time': '09:30', 'available': True}, {'time': '10:00', 'available': True}, {'time': '10:30', 'available': True}, {'time': '11:00', 'available': True}, {'time': '11:30', 'available': False}, {'time': '12:00', 'available': True}, {'time': '12:30', 'available': True}, {'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': False}, {'time': '17:30', 'available': False}, {'time': '18:00', 'available': False}, {'time': '18:30', 'available': True}]
Available slots: ['09:00', '09:30', '10:00', '10:30', '11:00', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '18:30']
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:63987][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:63987][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.03, 127.0.0.1:63947][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.03, 127.0.0.1:63947][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:63989]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:63989]
WebSocket REJECT /ws/appointments/ [127.0.0.1:63989]
WebSocket REJECT /ws/appointments/ [127.0.0.1:63989]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:63989]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:63989]
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:64022][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:64022][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:64022][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:64022][0m
Fetching available slots for doctor 5 on 2024-09-10
Parsed date: 2024-09-10
Doctor availabilities: <QuerySet [<DoctorAvailability: iamdoctor - 2024-09-10 09:00:00-19:00:00>, <DoctorAvailability: iamdoctor - 2024-09-10 17:00:00-18:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - iamdoctor - 2024-09-10 11:30:00+00:00>]>
All slots: [{'time': '09:00', 'available': True}, {'time': '09:30', 'available': True}, {'time': '10:00', 'available': True}, {'time': '10:30', 'available': True}, {'time': '11:00', 'available': True}, {'time': '11:30', 'available': False}, {'time': '12:00', 'available': True}, {'time': '12:30', 'available': True}, {'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': False}, {'time': '17:30', 'available': False}, {'time': '18:00', 'available': False}, {'time': '18:30', 'available': True}]
Available slots: ['09:00', '09:30', '10:00', '10:30', '11:00', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '18:30']
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.02, 127.0.0.1:64022][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.02, 127.0.0.1:64022][0m
Attempting to book appointment: Doctor: iamdoctor, Date: 2024-09-10 10:00:00+00:00
Availability found: iamdoctor - 2024-09-10 09:00:00-19:00:00
Existing appointment found: False
Appointment booked successfully: iampatient - iamdoctor - 2024-09-10 10:00:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [0.76, 127.0.0.1:64022][0m
[mHTTP POST /api/users/book-appointment/ 201 [0.76, 127.0.0.1:64022][0m
Fetching available slots for doctor 5 on 2024-09-10
Parsed date: 2024-09-10
Doctor availabilities: <QuerySet [<DoctorAvailability: iamdoctor - 2024-09-10 09:00:00-19:00:00>, <DoctorAvailability: iamdoctor - 2024-09-10 17:00:00-18:30:00>]>
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:64024][0m
Existing appointments: <QuerySet [<Appointment: iampatient - iamdoctor - 2024-09-10 11:30:00+00:00>, <Appointment: iampatient - iamdoctor - 2024-09-10 10:00:00+00:00>]>
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:64024][0m
All slots: [{'time': '09:00', 'available': True}, {'time': '09:30', 'available': True}, {'time': '10:00', 'available': False}, {'time': '10:30', 'available': True}, {'time': '11:00', 'available': True}, {'time': '11:30', 'available': False}, {'time': '12:00', 'available': True}, {'time': '12:30', 'available': True}, {'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': False}, {'time': '17:30', 'available': False}, {'time': '18:00', 'available': False}, {'time': '18:30', 'available': True}]
Available slots: ['09:00', '09:30', '10:30', '11:00', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '18:30']
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.04, 127.0.0.1:64022][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.04, 127.0.0.1:64022][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64026]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64026]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64026]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64026]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64026]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64026]
Fetching available slots for doctor 5 on 2024-09-10
Parsed date: 2024-09-10
Doctor availabilities: <QuerySet [<DoctorAvailability: iamdoctor - 2024-09-10 09:00:00-19:00:00>, <DoctorAvailability: iamdoctor - 2024-09-10 17:00:00-18:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - iamdoctor - 2024-09-10 11:30:00+00:00>, <Appointment: iampatient - iamdoctor - 2024-09-10 10:00:00+00:00>]>
All slots: [{'time': '09:00', 'available': True}, {'time': '09:30', 'available': True}, {'time': '10:00', 'available': False}, {'time': '10:30', 'available': True}, {'time': '11:00', 'available': True}, {'time': '11:30', 'available': False}, {'time': '12:00', 'available': True}, {'time': '12:30', 'available': True}, {'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': False}, {'time': '17:30', 'available': False}, {'time': '18:00', 'available': False}, {'time': '18:30', 'available': True}]
Available slots: ['09:00', '09:30', '10:30', '11:00', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '18:30']
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.02, 127.0.0.1:64022][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.02, 127.0.0.1:64022][0m
[mHTTP OPTIONS /api/users/reschedule-appointment/4/ 200 [0.00, 127.0.0.1:64022][0m
[mHTTP OPTIONS /api/users/reschedule-appointment/4/ 200 [0.00, 127.0.0.1:64022][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/4/ 200 [0.76, 127.0.0.1:64022][0m
[mHTTP POST /api/users/reschedule-appointment/4/ 200 [0.76, 127.0.0.1:64022][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.00, 127.0.0.1:64022][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.00, 127.0.0.1:64022][0m
[mHTTP OPTIONS /api/users/cancel-appointment/4/ 200 [0.00, 127.0.0.1:64022][0m
[mHTTP OPTIONS /api/users/cancel-appointment/4/ 200 [0.00, 127.0.0.1:64022][0m
Sending cancellation notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/cancel-appointment/4/ 200 [0.73, 127.0.0.1:64022][0m
[mHTTP POST /api/users/cancel-appointment/4/ 200 [0.73, 127.0.0.1:64022][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:64022][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:64022][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:64022][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:64022][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:64022][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:64022][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:64022][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:64022][0m
Fetching available slots for doctor 5 on 2024-09-10
Parsed date: 2024-09-10
Doctor availabilities: <QuerySet [<DoctorAvailability: iamdoctor - 2024-09-10 09:00:00-19:00:00>, <DoctorAvailability: iamdoctor - 2024-09-10 17:00:00-18:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - iamdoctor - 2024-09-10 10:00:00+00:00>]>
All slots: [{'time': '09:00', 'available': True}, {'time': '09:30', 'available': True}, {'time': '10:00', 'available': False}, {'time': '10:30', 'available': True}, {'time': '11:00', 'available': True}, {'time': '11:30', 'available': True}, {'time': '12:00', 'available': True}, {'time': '12:30', 'available': True}, {'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': False}, {'time': '17:30', 'available': False}, {'time': '18:00', 'available': False}, {'time': '18:30', 'available': True}]
Available slots: ['09:00', '09:30', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '18:30']
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.02, 127.0.0.1:64022][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.02, 127.0.0.1:64022][0m
Attempting to book appointment: Doctor: iamdoctor, Date: 2024-09-10 11:30:00+00:00
Availability found: iamdoctor - 2024-09-10 09:00:00-19:00:00
Existing appointment found: False
Appointment booked successfully: iampatient - iamdoctor - 2024-09-10 11:30:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [0.83, 127.0.0.1:64022][0m
[mHTTP POST /api/users/book-appointment/ 201 [0.83, 127.0.0.1:64022][0m
Fetching available slots for doctor 5 on 2024-09-10
Parsed date: 2024-09-10
Doctor availabilities: <QuerySet [<DoctorAvailability: iamdoctor - 2024-09-10 09:00:00-19:00:00>, <DoctorAvailability: iamdoctor - 2024-09-10 17:00:00-18:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - iamdoctor - 2024-09-10 10:00:00+00:00>, <Appointment: iampatient - iamdoctor - 2024-09-10 11:30:00+00:00>]>
All slots: [{'time': '09:00', 'available': True}, {'time': '09:30', 'available': True}, {'time': '10:00', 'available': False}, {'time': '10:30', 'available': True}, {'time': '11:00', 'available': True}, {'time': '11:30', 'available': False}, {'time': '12:00', 'available': True}, {'time': '12:30', 'available': True}, {'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': False}, {'time': '17:30', 'available': False}, {'time': '18:00', 'available': False}, {'time': '18:30', 'available': True}]
Available slots: ['09:00', '09:30', '10:30', '11:00', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '18:30']
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:64024][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:64024][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.04, 127.0.0.1:64022][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.04, 127.0.0.1:64022][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64036]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64036]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64036]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64036]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64036]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64036]
[mHTTP POST /api/users/login/ 200 [0.26, 127.0.0.1:64022][0m
[mHTTP POST /api/users/login/ 200 [0.26, 127.0.0.1:64022][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64022][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64022][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64041]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64041]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64041]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64041]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64041]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64041]
[mHTTP OPTIONS /api/users/cancel-appointment/5/ 200 [0.00, 127.0.0.1:64022][0m
[mHTTP OPTIONS /api/users/cancel-appointment/5/ 200 [0.00, 127.0.0.1:64022][0m
Sending cancellation notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/cancel-appointment/5/ 200 [0.70, 127.0.0.1:64022][0m
[mHTTP POST /api/users/cancel-appointment/5/ 200 [0.70, 127.0.0.1:64022][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.00, 127.0.0.1:64022][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.00, 127.0.0.1:64022][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64110][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64110][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64111]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64111]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64111]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64111]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64111]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64111]
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.01, 127.0.0.1:64110][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.01, 127.0.0.1:64110][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64114]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64114]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64114]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64114]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64114]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64114]
[mHTTP POST /api/users/login/ 200 [0.27, 127.0.0.1:64110][0m
[mHTTP POST /api/users/login/ 200 [0.27, 127.0.0.1:64110][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64110][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64110][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64120]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64120]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64120]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64120]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64120]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64120]
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64209][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64209][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64210]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64210]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64210]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64210]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64210]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64210]
[mHTTP POST /api/users/login/ 200 [0.26, 127.0.0.1:64209][0m
[mHTTP POST /api/users/login/ 200 [0.26, 127.0.0.1:64209][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:64209][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:64209][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64213]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64213]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64213]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64213]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64213]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64213]
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:64209][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:64209][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:64209][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:64209][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:64209][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:64209][0m
Fetching available slots for doctor 5 on 2024-09-10
Parsed date: 2024-09-10
Doctor availabilities: <QuerySet [<DoctorAvailability: iamdoctor - 2024-09-10 09:00:00-19:00:00>, <DoctorAvailability: iamdoctor - 2024-09-10 17:00:00-18:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - iamdoctor - 2024-09-10 11:30:00+00:00>]>
All slots: [{'time': '09:00', 'available': True}, {'time': '09:30', 'available': True}, {'time': '10:00', 'available': True}, {'time': '10:30', 'available': True}, {'time': '11:00', 'available': True}, {'time': '11:30', 'available': False}, {'time': '12:00', 'available': True}, {'time': '12:30', 'available': True}, {'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': False}, {'time': '17:30', 'available': False}, {'time': '18:00', 'available': False}, {'time': '18:30', 'available': True}]
Available slots: ['09:00', '09:30', '10:00', '10:30', '11:00', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '18:30']
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.02, 127.0.0.1:64209][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.02, 127.0.0.1:64209][0m
Attempting to book appointment: Doctor: iamdoctor, Date: 2024-09-10 09:30:00+00:00
Availability found: iamdoctor - 2024-09-10 09:00:00-19:00:00
Existing appointment found: False
Appointment booked successfully: iampatient - iamdoctor - 2024-09-10 09:30:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [0.77, 127.0.0.1:64209][0m
[mHTTP POST /api/users/book-appointment/ 201 [0.77, 127.0.0.1:64209][0m
Fetching available slots for doctor 5 on 2024-09-10
Parsed date: 2024-09-10
Doctor availabilities: <QuerySet [<DoctorAvailability: iamdoctor - 2024-09-10 09:00:00-19:00:00>, <DoctorAvailability: iamdoctor - 2024-09-10 17:00:00-18:30:00>]>
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:64218][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:64218][0m
Existing appointments: <QuerySet [<Appointment: iampatient - iamdoctor - 2024-09-10 11:30:00+00:00>, <Appointment: iampatient - iamdoctor - 2024-09-10 09:30:00+00:00>]>
All slots: [{'time': '09:00', 'available': True}, {'time': '09:30', 'available': False}, {'time': '10:00', 'available': True}, {'time': '10:30', 'available': True}, {'time': '11:00', 'available': True}, {'time': '11:30', 'available': False}, {'time': '12:00', 'available': True}, {'time': '12:30', 'available': True}, {'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': False}, {'time': '17:30', 'available': False}, {'time': '18:00', 'available': False}, {'time': '18:30', 'available': True}]
Available slots: ['09:00', '10:00', '10:30', '11:00', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '18:30']
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.03, 127.0.0.1:64209][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.03, 127.0.0.1:64209][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64221]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64221]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64221]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64221]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64221]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64221]
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:64209][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:64209][0m
[mHTTP POST /api/users/login/ 200 [0.25, 127.0.0.1:64209][0m
[mHTTP POST /api/users/login/ 200 [0.25, 127.0.0.1:64209][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64209][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64209][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64225]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64225]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64225]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64225]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64225]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64225]
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64252][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64252][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64253]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64253]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64253]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64253]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64253]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64253]
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64252][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64252][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64257]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64257]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64257]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64257]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64257]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64257]
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:64252][0m
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:64252][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64252][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64252][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64259]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64259]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64259]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64259]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64259]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64259]
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64252][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:64252][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64266]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64266]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64266]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64266]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64266]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64266]
[mHTTP POST /api/users/login/ 200 [0.21, 127.0.0.1:64252][0m
[mHTTP POST /api/users/login/ 200 [0.21, 127.0.0.1:64252][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:64252][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:64252][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64268]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:64268]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64268]
WebSocket REJECT /ws/appointments/ [127.0.0.1:64268]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64268]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:64268]
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\smart_healthcare\celery.py changed, reloading.
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\smart_healthcare\celery.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
[mHTTP OPTIONS /api/users/login/ 200 [0.01, 127.0.0.1:50497][0m
[mHTTP OPTIONS /api/users/login/ 200 [0.01, 127.0.0.1:50497][0m
[mHTTP POST /api/users/login/ 200 [0.26, 127.0.0.1:50497][0m
[mHTTP POST /api/users/login/ 200 [0.26, 127.0.0.1:50497][0m
[mHTTP OPTIONS /api/users/patient-dashboard/ 200 [0.00, 127.0.0.1:50497][0m
[mHTTP OPTIONS /api/users/patient-dashboard/ 200 [0.00, 127.0.0.1:50497][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:50497][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:50497][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50499]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50499]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50499]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50499]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50499]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50499]
[mHTTP POST /api/users/login/ 200 [0.28, 127.0.0.1:50497][0m
[mHTTP POST /api/users/login/ 200 [0.28, 127.0.0.1:50497][0m
[mHTTP OPTIONS /api/users/doctor-dashboard/ 200 [0.01, 127.0.0.1:50497][0m
[mHTTP OPTIONS /api/users/doctor-dashboard/ 200 [0.01, 127.0.0.1:50497][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:50497][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:50497][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50503]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50503]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50503]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50503]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50503]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50503]
[mHTTP OPTIONS /api/users/doctor-availability/ 200 [0.00, 127.0.0.1:50497][0m
[mHTTP OPTIONS /api/users/doctor-availability/ 200 [0.00, 127.0.0.1:50497][0m
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:50497][0m
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:50497][0m
[mHTTP POST /api/users/doctor-availability/ 201 [0.02, 127.0.0.1:50497][0m
[mHTTP POST /api/users/doctor-availability/ 201 [0.02, 127.0.0.1:50497][0m
[mHTTP POST /api/users/login/ 200 [0.26, 127.0.0.1:50497][0m
[mHTTP POST /api/users/login/ 200 [0.26, 127.0.0.1:50497][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:50497][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:50497][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50508]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50508]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50508]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50508]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50508]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50508]
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:50497][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:50497][0m
[mHTTP OPTIONS /api/users/doctors-by-specialty/?specialty=1 200 [0.00, 127.0.0.1:50497][0m
[mHTTP OPTIONS /api/users/doctors-by-specialty/?specialty=1 200 [0.00, 127.0.0.1:50497][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.03, 127.0.0.1:50497][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.03, 127.0.0.1:50497][0m
[mHTTP OPTIONS /api/users/doctors-by-specialty/?specialty=2 200 [0.00, 127.0.0.1:50497][0m
[mHTTP OPTIONS /api/users/doctors-by-specialty/?specialty=2 200 [0.00, 127.0.0.1:50497][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:50497][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:50497][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.00, 127.0.0.1:50497][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.00, 127.0.0.1:50497][0m
Fetching available slots for doctor 5 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: iamdoctor - 2024-09-08 13:00:00-21:00:00>]>
Existing appointments: <QuerySet []>
All slots: [{'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}]
Available slots: ['13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30']
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.02, 127.0.0.1:50497][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.02, 127.0.0.1:50497][0m
[mHTTP OPTIONS /api/users/book-appointment/ 200 [0.01, 127.0.0.1:50497][0m
[mHTTP OPTIONS /api/users/book-appointment/ 200 [0.01, 127.0.0.1:50497][0m
Attempting to book appointment: Doctor: iamdoctor, Date: 2024-09-08 20:30:00+00:00
Availability found: iamdoctor - 2024-09-08 13:00:00-21:00:00
Existing appointment found: False
Appointment booked successfully: iampatient - iamdoctor - 2024-09-08 20:30:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [1.89, 127.0.0.1:50497][0m
[mHTTP POST /api/users/book-appointment/ 201 [1.89, 127.0.0.1:50497][0m
Fetching available slots for doctor 5 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: iamdoctor - 2024-09-08 13:00:00-21:00:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - iamdoctor - 2024-09-08 20:30:00+00:00>]>
All slots: [{'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': False}]
Available slots: ['13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00']
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.02, 127.0.0.1:50497][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.02, 127.0.0.1:50497][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:50514][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:50514][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50516]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50516]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50516]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50516]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50516]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50516]
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\consumers.py changed, reloading.
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\consumers.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:50708][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:50708][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50709]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50709]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50709]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50709]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50709]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50709]
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:50708][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:50708][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:50708][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:50708][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:50708][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:50708][0m
Fetching available slots for doctor 5 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: iamdoctor - 2024-09-08 13:00:00-21:00:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - iamdoctor - 2024-09-08 20:30:00+00:00>]>
All slots: [{'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': False}]
Available slots: ['13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00']
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.02, 127.0.0.1:50708][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.02, 127.0.0.1:50708][0m
Attempting to book appointment: Doctor: iamdoctor, Date: 2024-09-08 20:00:00+00:00
Availability found: iamdoctor - 2024-09-08 13:00:00-21:00:00
Existing appointment found: False
Appointment booked successfully: iampatient - iamdoctor - 2024-09-08 20:00:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [1.59, 127.0.0.1:50708][0m
[mHTTP POST /api/users/book-appointment/ 201 [1.59, 127.0.0.1:50708][0m
Fetching available slots for doctor 5 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: iamdoctor - 2024-09-08 13:00:00-21:00:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - iamdoctor - 2024-09-08 20:30:00+00:00>, <Appointment: iampatient - iamdoctor - 2024-09-08 20:00:00+00:00>]>
All slots: [{'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': False}, {'time': '20:30', 'available': False}]
Available slots: ['13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00', '17:30', '18:00', '18:30', '19:00', '19:30']
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.03, 127.0.0.1:50708][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.03, 127.0.0.1:50708][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:50716][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:50716][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50718]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50718]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50718]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50718]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50718]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50718]
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP POST /api/users/login/ 200 [0.27, 127.0.0.1:50716][0m
[mHTTP POST /api/users/login/ 200 [0.27, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:50716][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50725]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50725]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50725]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50725]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50725]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50725]
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP POST /api/users/doctor-availability/ 201 [0.02, 127.0.0.1:50716][0m
[mHTTP POST /api/users/doctor-availability/ 201 [0.02, 127.0.0.1:50716][0m
[mHTTP POST /api/users/login/ 200 [0.27, 127.0.0.1:50716][0m
[mHTTP POST /api/users/login/ 200 [0.27, 127.0.0.1:50716][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:50716][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50730]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50730]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50730]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50730]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50730]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50730]
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:50716][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.00, 127.0.0.1:50716][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.00, 127.0.0.1:50716][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet []>
Existing appointments: <QuerySet []>
All slots: []
Available slots: []
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:50716][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:50716][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50732]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50732]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50732]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50732]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50732]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50732]
[mHTTP POST /api/users/login/ 200 [0.25, 127.0.0.1:50716][0m
[mHTTP POST /api/users/login/ 200 [0.25, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:50716][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50739]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50739]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50739]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50739]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50739]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50739]
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP OPTIONS /api/users/doctor-availability/6/ 200 [0.00, 127.0.0.1:50716][0m
[mHTTP OPTIONS /api/users/doctor-availability/6/ 200 [0.00, 127.0.0.1:50716][0m
[mHTTP DELETE /api/users/doctor-availability/6/ 204 [0.03, 127.0.0.1:50716][0m
[mHTTP DELETE /api/users/doctor-availability/6/ 204 [0.03, 127.0.0.1:50716][0m
[mHTTP POST /api/users/login/ 200 [0.26, 127.0.0.1:50716][0m
[mHTTP POST /api/users/login/ 200 [0.26, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.01, 127.0.0.1:50716][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50742]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50742]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50742]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50742]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50742]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50742]
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP POST /api/users/doctor-availability/ 201 [0.02, 127.0.0.1:50716][0m
[mHTTP POST /api/users/doctor-availability/ 201 [0.02, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:50716][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50752]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50752]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50752]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50752]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50752]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50752]
[mHTTP POST /api/users/login/ 200 [0.25, 127.0.0.1:50716][0m
[mHTTP POST /api/users/login/ 200 [0.25, 127.0.0.1:50716][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:50716][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50754]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50754]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50754]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50754]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50754]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50754]
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:50716][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet []>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}, {'time': '21:00', 'available': True}, {'time': '21:30', 'available': True}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': True}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '21:00', '21:30', '22:00', '22:30', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:50716][0m
Attempting to book appointment: Doctor: doctor1, Date: 2024-09-08 20:30:00+00:00
Availability found: doctor1 - 2024-09-08 17:00:00-23:30:00
Existing appointment found: False
Appointment booked successfully: iampatient - doctor1 - 2024-09-08 20:30:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [2.75, 127.0.0.1:50716][0m
[mHTTP POST /api/users/book-appointment/ 201 [2.75, 127.0.0.1:50716][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 20:30:00+00:00>]>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': False}, {'time': '21:00', 'available': True}, {'time': '21:30', 'available': True}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': True}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '21:00', '21:30', '22:00', '22:30', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.03, 127.0.0.1:50716][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.03, 127.0.0.1:50716][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:50809][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:50809][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50811]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50811]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50811]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50811]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50811]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50811]
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:50809][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:50809][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50851]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50851]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50851]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50851]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50851]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50851]
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:50980][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:50980][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:50980][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:50980][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 20:30:00+00:00>]>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': False}, {'time': '21:00', 'available': True}, {'time': '21:30', 'available': True}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': True}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '21:00', '21:30', '22:00', '22:30', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:50980][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:50980][0m
Attempting to book appointment: Doctor: doctor1, Date: 2024-09-08 21:00:00+00:00
Availability found: doctor1 - 2024-09-08 17:00:00-23:30:00
Existing appointment found: False
Appointment booked successfully: iampatient - doctor1 - 2024-09-08 21:00:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [1.66, 127.0.0.1:50980][0m
[mHTTP POST /api/users/book-appointment/ 201 [1.66, 127.0.0.1:50980][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 20:30:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 21:00:00+00:00>]>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': False}, {'time': '21:00', 'available': False}, {'time': '21:30', 'available': True}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': True}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '21:30', '22:00', '22:30', '23:00']
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:50985][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:50985][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.03, 127.0.0.1:50980][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.03, 127.0.0.1:50980][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50987]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:50987]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50987]
WebSocket REJECT /ws/appointments/ [127.0.0.1:50987]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50987]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:50987]
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51024][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51024][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51025]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51025]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51025]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51025]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51025]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51025]
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 20:30:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 21:00:00+00:00>]>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': False}, {'time': '21:00', 'available': False}, {'time': '21:30', 'available': True}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': True}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '21:30', '22:00', '22:30', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51078][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51078][0m
[mHTTP OPTIONS /api/users/reschedule-appointment/11/ 200 [0.00, 127.0.0.1:51078][0m
[mHTTP OPTIONS /api/users/reschedule-appointment/11/ 200 [0.00, 127.0.0.1:51078][0m
Internal Server Error: /api/users/reschedule-appointment/11/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\decorators.py", line 50, in handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 225, in reschedule_appointment
    new_date = parse_datetime(request.data.get('date'))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\utils\dateparse.py", line 114, in parse_datetime
    return datetime.datetime.fromisoformat(value)
TypeError: fromisoformat: argument must be str
Internal Server Error: /api/users/reschedule-appointment/11/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\decorators.py", line 50, in handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 225, in reschedule_appointment
    new_date = parse_datetime(request.data.get('date'))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\utils\dateparse.py", line 114, in parse_datetime
    return datetime.datetime.fromisoformat(value)
TypeError: fromisoformat: argument must be str
[35;1mHTTP POST /api/users/reschedule-appointment/11/ 500 [0.06, 127.0.0.1:51078][0m
[35;1mHTTP POST /api/users/reschedule-appointment/11/ 500 [0.06, 127.0.0.1:51078][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51078][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51078][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51085]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51085]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51085]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51085]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51085]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51085]
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 20:30:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 21:00:00+00:00>]>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': False}, {'time': '21:00', 'available': False}, {'time': '21:30', 'available': True}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': True}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '21:30', '22:00', '22:30', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51078][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51078][0m
Internal Server Error: /api/users/reschedule-appointment/11/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\decorators.py", line 50, in handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 225, in reschedule_appointment
    new_date = parse_datetime(request.data.get('date'))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\utils\dateparse.py", line 114, in parse_datetime
    return datetime.datetime.fromisoformat(value)
TypeError: fromisoformat: argument must be str
Internal Server Error: /api/users/reschedule-appointment/11/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\decorators.py", line 50, in handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 225, in reschedule_appointment
    new_date = parse_datetime(request.data.get('date'))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\utils\dateparse.py", line 114, in parse_datetime
    return datetime.datetime.fromisoformat(value)
TypeError: fromisoformat: argument must be str
[35;1mHTTP POST /api/users/reschedule-appointment/11/ 500 [0.05, 127.0.0.1:51078][0m
[35;1mHTTP POST /api/users/reschedule-appointment/11/ 500 [0.05, 127.0.0.1:51078][0m
Fetching available slots for doctor 5 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: iamdoctor - 2024-09-08 13:00:00-21:00:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - iamdoctor - 2024-09-08 20:30:00+00:00>, <Appointment: iampatient - iamdoctor - 2024-09-08 20:00:00+00:00>]>
All slots: [{'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': False}, {'time': '20:30', 'available': False}]
Available slots: ['13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00', '17:30', '18:00', '18:30', '19:00', '19:30']
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.02, 127.0.0.1:51078][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.02, 127.0.0.1:51078][0m
[mHTTP OPTIONS /api/users/reschedule-appointment/9/ 200 [0.00, 127.0.0.1:51078][0m
[mHTTP OPTIONS /api/users/reschedule-appointment/9/ 200 [0.00, 127.0.0.1:51078][0m
Internal Server Error: /api/users/reschedule-appointment/9/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\decorators.py", line 50, in handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 225, in reschedule_appointment
    new_date = parse_datetime(request.data.get('date'))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\utils\dateparse.py", line 114, in parse_datetime
    return datetime.datetime.fromisoformat(value)
TypeError: fromisoformat: argument must be str
Internal Server Error: /api/users/reschedule-appointment/9/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\decorators.py", line 50, in handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 225, in reschedule_appointment
    new_date = parse_datetime(request.data.get('date'))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\utils\dateparse.py", line 114, in parse_datetime
    return datetime.datetime.fromisoformat(value)
TypeError: fromisoformat: argument must be str
[35;1mHTTP POST /api/users/reschedule-appointment/9/ 500 [0.04, 127.0.0.1:51078][0m
[35;1mHTTP POST /api/users/reschedule-appointment/9/ 500 [0.04, 127.0.0.1:51078][0m
[mHTTP OPTIONS /api/users/cancel-appointment/11/ 200 [0.00, 127.0.0.1:51078][0m
[mHTTP OPTIONS /api/users/cancel-appointment/11/ 200 [0.00, 127.0.0.1:51078][0m
Sending cancellation notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/cancel-appointment/11/ 200 [1.47, 127.0.0.1:51078][0m
[mHTTP POST /api/users/cancel-appointment/11/ 200 [1.47, 127.0.0.1:51078][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51078][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51078][0m
[mHTTP OPTIONS /api/users/cancel-appointment/10/ 200 [0.00, 127.0.0.1:51078][0m
[mHTTP OPTIONS /api/users/cancel-appointment/10/ 200 [0.00, 127.0.0.1:51078][0m
Sending cancellation notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/cancel-appointment/10/ 200 [1.47, 127.0.0.1:51078][0m
[mHTTP POST /api/users/cancel-appointment/10/ 200 [1.47, 127.0.0.1:51078][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51078][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51078][0m
[mHTTP OPTIONS /api/users/cancel-appointment/8/ 200 [0.00, 127.0.0.1:51078][0m
[mHTTP OPTIONS /api/users/cancel-appointment/8/ 200 [0.00, 127.0.0.1:51078][0m
Sending cancellation notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/cancel-appointment/8/ 200 [1.37, 127.0.0.1:51078][0m
[mHTTP POST /api/users/cancel-appointment/8/ 200 [1.37, 127.0.0.1:51078][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51078][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51078][0m
[mHTTP OPTIONS /api/users/cancel-appointment/9/ 200 [0.00, 127.0.0.1:51078][0m
[mHTTP OPTIONS /api/users/cancel-appointment/9/ 200 [0.00, 127.0.0.1:51078][0m
Sending cancellation notification email to tolakari18@gmail.com
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:51103][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:51103][0m
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/cancel-appointment/9/ 200 [1.41, 127.0.0.1:51078][0m
[mHTTP POST /api/users/cancel-appointment/9/ 200 [1.41, 127.0.0.1:51078][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51078][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51078][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:51078][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:51078][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet []>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}, {'time': '21:00', 'available': True}, {'time': '21:30', 'available': True}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': True}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '21:00', '21:30', '22:00', '22:30', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51078][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51078][0m
Attempting to book appointment: Doctor: doctor1, Date: 2024-09-08 21:00:00+00:00
Availability found: doctor1 - 2024-09-08 17:00:00-23:30:00
Existing appointment found: False
Appointment booked successfully: iampatient - doctor1 - 2024-09-08 21:00:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [1.44, 127.0.0.1:51078][0m
[mHTTP POST /api/users/book-appointment/ 201 [1.44, 127.0.0.1:51078][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 21:00:00+00:00>]>
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51103][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51103][0m
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}, {'time': '21:00', 'available': False}, {'time': '21:30', 'available': True}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': True}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '21:30', '22:00', '22:30', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.03, 127.0.0.1:51078][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.03, 127.0.0.1:51078][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51108]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51108]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51108]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51108]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51108]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51108]
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\consumers.py changed, reloading.
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\consumers.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
[mHTTP GET /api/users/specialties/ 200 [0.02, 127.0.0.1:51182][0m
[mHTTP GET /api/users/specialties/ 200 [0.02, 127.0.0.1:51182][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 127.0.0.1:51182][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 127.0.0.1:51182][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 21:00:00+00:00>]>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}, {'time': '21:00', 'available': False}, {'time': '21:30', 'available': True}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': True}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '21:30', '22:00', '22:30', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.03, 127.0.0.1:51182][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.03, 127.0.0.1:51182][0m
Attempting to book appointment: Doctor: doctor1, Date: 2024-09-08 21:30:00+00:00
Availability found: doctor1 - 2024-09-08 17:00:00-23:30:00
Existing appointment found: False
Appointment booked successfully: iampatient - doctor1 - 2024-09-08 21:30:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [1.61, 127.0.0.1:51182][0m
[mHTTP POST /api/users/book-appointment/ 201 [1.61, 127.0.0.1:51182][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 21:00:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 21:30:00+00:00>]>
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51191][0m
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}, {'time': '21:00', 'available': False}, {'time': '21:30', 'available': False}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': True}, {'time': '23:00', 'available': True}]
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51191][0m
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '22:00', '22:30', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.03, 127.0.0.1:51182][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.03, 127.0.0.1:51182][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51193]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51193]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51193]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51193]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51193]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51193]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51346][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51346][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51347]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51347]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51347]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51347]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51347]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51347]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51346][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51346][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51350]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51350]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51350]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51350]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51350]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51350]
WebSocket connection closed for user None
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:51346][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:51346][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:51346][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:51346][0m
Fetching available slots for doctor 5 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: iamdoctor - 2024-09-08 13:00:00-21:00:00>]>
Existing appointments: <QuerySet []>
All slots: [{'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}]
Available slots: ['13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30']
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.01, 127.0.0.1:51346][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.01, 127.0.0.1:51346][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:51346][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:51346][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 21:00:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 21:30:00+00:00>]>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}, {'time': '21:00', 'available': False}, {'time': '21:30', 'available': False}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': True}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '22:00', '22:30', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51346][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51346][0m
Attempting to book appointment: Doctor: doctor1, Date: 2024-09-08 22:00:00+00:00
Availability found: doctor1 - 2024-09-08 17:00:00-23:30:00
Existing appointment found: False
Appointment booked successfully: iampatient - doctor1 - 2024-09-08 22:00:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [1.44, 127.0.0.1:51346][0m
[mHTTP POST /api/users/book-appointment/ 201 [1.44, 127.0.0.1:51346][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 21:00:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 21:30:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 22:00:00+00:00>]>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}, {'time': '21:00', 'available': False}, {'time': '21:30', 'available': False}, {'time': '22:00', 'available': False}, {'time': '22:30', 'available': True}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '22:30', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.03, 127.0.0.1:51346][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.03, 127.0.0.1:51346][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51371][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51371][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51373]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51373]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51373]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51373]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51373]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51373]
WebSocket connection closed for user None
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:51419][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:51419][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:51419][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:51419][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 21:00:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 21:30:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 22:00:00+00:00>]>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}, {'time': '21:00', 'available': False}, {'time': '21:30', 'available': False}, {'time': '22:00', 'available': False}, {'time': '22:30', 'available': True}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '22:30', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51419][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51419][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51419][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51419][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51428]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51428]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51428]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51428]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51428]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51428]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51505][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51505][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51506]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51506]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51506]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51506]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51506]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51506]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51505][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51505][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51512]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51512]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51512]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51512]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51512]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51512]
WebSocket connection closed for user None
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 21:00:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 21:30:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 22:00:00+00:00>]>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}, {'time': '21:00', 'available': False}, {'time': '21:30', 'available': False}, {'time': '22:00', 'available': False}, {'time': '22:30', 'available': True}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '22:30', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51505][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51505][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51505][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51505][0m
[mHTTP OPTIONS /api/users/cancel-appointment/14/ 200 [0.00, 127.0.0.1:51505][0m
[mHTTP OPTIONS /api/users/cancel-appointment/14/ 200 [0.00, 127.0.0.1:51505][0m
Sending cancellation notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/cancel-appointment/14/ 200 [1.53, 127.0.0.1:51505][0m
[mHTTP POST /api/users/cancel-appointment/14/ 200 [1.53, 127.0.0.1:51505][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51505][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51505][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:51505][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:51505][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 127.0.0.1:51505][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 127.0.0.1:51505][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 21:00:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 21:30:00+00:00>]>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}, {'time': '21:00', 'available': False}, {'time': '21:30', 'available': False}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': True}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '22:00', '22:30', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51505][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51505][0m
Attempting to book appointment: Doctor: doctor1, Date: 2024-09-08 22:30:00+00:00
Availability found: doctor1 - 2024-09-08 17:00:00-23:30:00
Existing appointment found: False
Appointment booked successfully: iampatient - doctor1 - 2024-09-08 22:30:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [1.36, 127.0.0.1:51505][0m
[mHTTP POST /api/users/book-appointment/ 201 [1.36, 127.0.0.1:51505][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 21:00:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 21:30:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 22:30:00+00:00>]>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}, {'time': '21:00', 'available': False}, {'time': '21:30', 'available': False}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': False}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '22:00', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51505][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51505][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51518][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51518][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51520]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51520]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51520]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51520]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51520]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51520]
WebSocket connection closed for user None
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 21:00:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 21:30:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 22:30:00+00:00>]>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}, {'time': '21:00', 'available': False}, {'time': '21:30', 'available': False}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': False}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '22:00', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51518][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51518][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51518][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51518][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 21:00:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 21:30:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 22:30:00+00:00>]>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}, {'time': '21:00', 'available': False}, {'time': '21:30', 'available': False}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': False}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '22:00', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51518][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51518][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51518][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51518][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51642][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51642][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51643]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51643]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51643]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51643]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51643]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51643]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51642][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51642][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51646]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51646]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51646]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51646]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51646]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51646]
WebSocket connection closed for user None
[mHTTP OPTIONS /api/users//appointments/15/reschedule/ 200 [0.00, 127.0.0.1:51642][0m
[mHTTP OPTIONS /api/users//appointments/15/reschedule/ 200 [0.00, 127.0.0.1:51642][0m
Not Found: /api/users//appointments/15/reschedule/
Not Found: /api/users//appointments/15/reschedule/
[33mHTTP PUT /api/users//appointments/15/reschedule/ 404 [0.02, 127.0.0.1:51642][0m
[33mHTTP PUT /api/users//appointments/15/reschedule/ 404 [0.02, 127.0.0.1:51642][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51725][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51725][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51727]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51727]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51727]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51727]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51727]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51727]
WebSocket connection closed for user None
[mHTTP OPTIONS /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 200 [0.00, 127.0.0.1:51725][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 200 [0.00, 127.0.0.1:51725][0m
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 404 [0.01, 127.0.0.1:51725][0m
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 404 [0.01, 127.0.0.1:51725][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.00, 127.0.0.1:51725][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.00, 127.0.0.1:51725][0m
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-08/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-08/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 404 [0.01, 127.0.0.1:51725][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 404 [0.01, 127.0.0.1:51725][0m
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-08/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-08/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 404 [0.01, 127.0.0.1:51725][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 404 [0.01, 127.0.0.1:51725][0m
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-08/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-08/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 404 [0.01, 127.0.0.1:51725][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 404 [0.01, 127.0.0.1:51725][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:51725][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:51725][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 127.0.0.1:51725][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 127.0.0.1:51725][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51725][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51725][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51732]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51732]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51732]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51732]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51732]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51732]
WebSocket connection closed for user None
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:51821][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:51821][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51822]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51822]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51822]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51822]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51822]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51822]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51821][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51821][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51825]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51825]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51825]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51825]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51825]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51825]
WebSocket connection closed for user None
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-08/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-08/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 404 [0.01, 127.0.0.1:51821][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 404 [0.01, 127.0.0.1:51821][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:51821][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:51821][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 127.0.0.1:51821][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 127.0.0.1:51821][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 21:00:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 21:30:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 22:30:00+00:00>]>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}, {'time': '21:00', 'available': False}, {'time': '21:30', 'available': False}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': False}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '22:00', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51821][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51821][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51821][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51821][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51832]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51832]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51832]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51832]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51832]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51832]
WebSocket connection closed for user None
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 404 [0.01, 127.0.0.1:51821][0m
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 404 [0.01, 127.0.0.1:51821][0m
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-08/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-08/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 404 [0.01, 127.0.0.1:51821][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 404 [0.01, 127.0.0.1:51821][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/doctor1/2024-09-09/ 200 [0.00, 127.0.0.1:51821][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/doctor1/2024-09-09/ 200 [0.00, 127.0.0.1:51821][0m
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:51821][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:51821][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/doctor1/2024-09-10/ 200 [0.00, 127.0.0.1:51821][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/doctor1/2024-09-10/ 200 [0.00, 127.0.0.1:51821][0m
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-10/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-10/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-10/ 404 [0.01, 127.0.0.1:51821][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-10/ 404 [0.01, 127.0.0.1:51821][0m
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-08/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-08/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 404 [0.01, 127.0.0.1:51821][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 404 [0.01, 127.0.0.1:51821][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:51880][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:51880][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:51880][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:51880][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.00, 127.0.0.1:51880][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.00, 127.0.0.1:51880][0m
Fetching available slots for doctor 2 on 2024-09-09
Parsed date: 2024-09-09
Doctor availabilities: <QuerySet []>
Existing appointments: <QuerySet []>
All slots: []
Available slots: []
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.02, 127.0.0.1:51880][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.02, 127.0.0.1:51880][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/2/2024-09-10/ 200 [0.01, 127.0.0.1:51880][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/2/2024-09-10/ 200 [0.01, 127.0.0.1:51880][0m
Fetching available slots for doctor 2 on 2024-09-10
Parsed date: 2024-09-10
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-10 09:00:00-19:00:00>, <DoctorAvailability: doctor1 - 2024-09-10 17:00:00-18:00:00>]>
Existing appointments: <QuerySet [<Appointment: patient1 - doctor1 - 2024-09-10 11:30:00+00:00>, <Appointment: patient1 - doctor1 - 2024-09-10 10:00:00+00:00>]>
All slots: [{'time': '09:00', 'available': True}, {'time': '09:30', 'available': True}, {'time': '10:00', 'available': False}, {'time': '10:30', 'available': True}, {'time': '11:00', 'available': True}, {'time': '11:30', 'available': False}, {'time': '12:00', 'available': True}, {'time': '12:30', 'available': True}, {'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': False}, {'time': '17:30', 'available': False}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}]
Available slots: ['09:00', '09:30', '10:30', '11:00', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '18:00', '18:30']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-10/ 200 [0.02, 127.0.0.1:51880][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-10/ 200 [0.02, 127.0.0.1:51880][0m
Attempting to book appointment: Doctor: doctor1, Date: 2024-09-10 10:30:00+00:00
Availability found: doctor1 - 2024-09-10 09:00:00-19:00:00
Existing appointment found: False
Appointment booked successfully: iampatient - doctor1 - 2024-09-10 10:30:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [1.50, 127.0.0.1:51880][0m
[mHTTP POST /api/users/book-appointment/ 201 [1.50, 127.0.0.1:51880][0m
Fetching available slots for doctor 2 on 2024-09-10
Parsed date: 2024-09-10
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-10 09:00:00-19:00:00>, <DoctorAvailability: doctor1 - 2024-09-10 17:00:00-18:00:00>]>
Existing appointments: <QuerySet [<Appointment: patient1 - doctor1 - 2024-09-10 11:30:00+00:00>, <Appointment: patient1 - doctor1 - 2024-09-10 10:00:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-10 10:30:00+00:00>]>
All slots: [{'time': '09:00', 'available': True}, {'time': '09:30', 'available': True}, {'time': '10:00', 'available': False}, {'time': '10:30', 'available': False}, {'time': '11:00', 'available': True}, {'time': '11:30', 'available': False}, {'time': '12:00', 'available': True}, {'time': '12:30', 'available': True}, {'time': '13:00', 'available': True}, {'time': '13:30', 'available': True}, {'time': '14:00', 'available': True}, {'time': '14:30', 'available': True}, {'time': '15:00', 'available': True}, {'time': '15:30', 'available': True}, {'time': '16:00', 'available': True}, {'time': '16:30', 'available': True}, {'time': '17:00', 'available': False}, {'time': '17:30', 'available': False}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}]
Available slots: ['09:00', '09:30', '11:00', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '18:00', '18:30']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-10/ 200 [0.04, 127.0.0.1:51880][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-10/ 200 [0.04, 127.0.0.1:51880][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51890][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51890][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51892]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51892]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51892]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51892]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51892]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51892]
WebSocket connection closed for user None
[mHTTP OPTIONS /api/users/cancel-appointment/16/ 200 [0.00, 127.0.0.1:51890][0m
[mHTTP OPTIONS /api/users/cancel-appointment/16/ 200 [0.00, 127.0.0.1:51890][0m
Sending cancellation notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/cancel-appointment/16/ 200 [1.29, 127.0.0.1:51890][0m
[mHTTP POST /api/users/cancel-appointment/16/ 200 [1.29, 127.0.0.1:51890][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51890][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51890][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51890][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51890][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51909]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51909]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51909]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51909]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51909]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51909]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51890][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51890][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51913]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51913]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51913]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51913]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51913]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51913]
WebSocket connection closed for user None
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-08/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-08/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 404 [0.01, 127.0.0.1:51890][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 404 [0.01, 127.0.0.1:51890][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:51890][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:51890][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:51890][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:51890][0m
Fetching available slots for doctor 2 on 2024-09-08
Parsed date: 2024-09-08
Doctor availabilities: <QuerySet [<DoctorAvailability: doctor1 - 2024-09-08 17:00:00-23:30:00>]>
Existing appointments: <QuerySet [<Appointment: iampatient - doctor1 - 2024-09-08 21:00:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 21:30:00+00:00>, <Appointment: iampatient - doctor1 - 2024-09-08 22:30:00+00:00>]>
All slots: [{'time': '17:00', 'available': True}, {'time': '17:30', 'available': True}, {'time': '18:00', 'available': True}, {'time': '18:30', 'available': True}, {'time': '19:00', 'available': True}, {'time': '19:30', 'available': True}, {'time': '20:00', 'available': True}, {'time': '20:30', 'available': True}, {'time': '21:00', 'available': False}, {'time': '21:30', 'available': False}, {'time': '22:00', 'available': True}, {'time': '22:30', 'available': False}, {'time': '23:00', 'available': True}]
Available slots: ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '22:00', '23:00']
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51890][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:51890][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51890][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51890][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51916]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51916]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51916]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51916]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51916]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51916]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51960][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:51960][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51961]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51961]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51961]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51961]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51961]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51961]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51960][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:51960][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51967]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:51967]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:51967]
WebSocket REJECT /ws/appointments/ [127.0.0.1:51967]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51967]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:51967]
WebSocket connection closed for user None
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-08/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-08/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 404 [0.01, 127.0.0.1:51960][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 404 [0.01, 127.0.0.1:51960][0m
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-10/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-10/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-10/ 404 [0.01, 127.0.0.1:51960][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-10/ 404 [0.01, 127.0.0.1:51960][0m
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 404 [0.01, 127.0.0.1:51960][0m
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 404 [0.01, 127.0.0.1:51960][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/iamdoctor/2024-09-08/ 200 [0.00, 127.0.0.1:51960][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/iamdoctor/2024-09-08/ 200 [0.00, 127.0.0.1:51960][0m
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-08/
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-08/
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-08/ 404 [0.01, 127.0.0.1:51960][0m
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-08/ 404 [0.01, 127.0.0.1:51960][0m
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 404 [0.01, 127.0.0.1:51960][0m
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 404 [0.01, 127.0.0.1:51960][0m
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-08/
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-08/
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-08/ 404 [0.01, 127.0.0.1:51960][0m
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-08/ 404 [0.01, 127.0.0.1:51960][0m
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 404 [0.01, 127.0.0.1:51960][0m
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 404 [0.01, 127.0.0.1:51960][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/iamdoctor/2024-09-11/ 200 [0.00, 127.0.0.1:51960][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/iamdoctor/2024-09-11/ 200 [0.00, 127.0.0.1:51960][0m
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-11/
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-11/
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-11/ 404 [0.02, 127.0.0.1:51960][0m
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-11/ 404 [0.02, 127.0.0.1:51960][0m
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
Not Found: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 404 [0.01, 127.0.0.1:51960][0m
[33mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 404 [0.01, 127.0.0.1:51960][0m
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\smart_healthcare\urls.py changed, reloading.
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\smart_healthcare\urls.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52152]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52152]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:52152]
WebSocket REJECT /ws/appointments/ [127.0.0.1:52152]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52152]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52152]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:52153][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:52153][0m
Internal Server Error: /api/users/doctor-available-slots/doctor1/2024-09-08/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 296, in doctor_available_slots
    return JsonResponse({'all_slots': available_slots})
NameError: name 'available_slots' is not defined
Internal Server Error: /api/users/doctor-available-slots/doctor1/2024-09-08/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 296, in doctor_available_slots
    return JsonResponse({'all_slots': available_slots})
NameError: name 'available_slots' is not defined
[35;1mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 500 [0.03, 127.0.0.1:52153][0m
[35;1mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 500 [0.03, 127.0.0.1:52153][0m
Internal Server Error: /api/users/doctor-available-slots/doctor1/2024-09-10/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 296, in doctor_available_slots
    return JsonResponse({'all_slots': available_slots})
NameError: name 'available_slots' is not defined
Internal Server Error: /api/users/doctor-available-slots/doctor1/2024-09-10/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 296, in doctor_available_slots
    return JsonResponse({'all_slots': available_slots})
NameError: name 'available_slots' is not defined
[35;1mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-10/ 500 [0.03, 127.0.0.1:52153][0m
[35;1mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-10/ 500 [0.03, 127.0.0.1:52153][0m
Internal Server Error: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 296, in doctor_available_slots
    return JsonResponse({'all_slots': available_slots})
NameError: name 'available_slots' is not defined
Internal Server Error: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 296, in doctor_available_slots
    return JsonResponse({'all_slots': available_slots})
NameError: name 'available_slots' is not defined
[35;1mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 500 [0.03, 127.0.0.1:52153][0m
[35;1mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 500 [0.03, 127.0.0.1:52153][0m
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py changed, reloading.
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52281][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52281][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:52281][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:52281][0m
[mHTTP OPTIONS /api/users//appointments/13/reschedule/ 200 [0.00, 127.0.0.1:52281][0m
[mHTTP OPTIONS /api/users//appointments/13/reschedule/ 200 [0.00, 127.0.0.1:52281][0m
Not Found: /api/users//appointments/13/reschedule/
Not Found: /api/users//appointments/13/reschedule/
[33mHTTP PUT /api/users//appointments/13/reschedule/ 404 [0.01, 127.0.0.1:52281][0m
[33mHTTP PUT /api/users//appointments/13/reschedule/ 404 [0.01, 127.0.0.1:52281][0m
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\urls.py changed, reloading.
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\urls.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:52426][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:52426][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52428]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52428]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:52428]
WebSocket REJECT /ws/appointments/ [127.0.0.1:52428]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52428]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52428]
WebSocket connection closed for user None
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52426][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52426][0m
[mHTTP OPTIONS /api/users/reschedule-appointment/15/ 200 [0.00, 127.0.0.1:52426][0m
[mHTTP OPTIONS /api/users/reschedule-appointment/15/ 200 [0.00, 127.0.0.1:52426][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.53, 127.0.0.1:52426][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.53, 127.0.0.1:52426][0m
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py changed, reloading.
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52601]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52601]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:52601]
WebSocket REJECT /ws/appointments/ [127.0.0.1:52601]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52601]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52601]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:52602][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:52602][0m
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52602][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52602][0m
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52602][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52602][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52602][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52602][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.43, 127.0.0.1:52602][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.43, 127.0.0.1:52602][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:52602][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:52602][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52643]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52643]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:52643]
WebSocket REJECT /ws/appointments/ [127.0.0.1:52643]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52643]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52643]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:52602][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:52602][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52655]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52655]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:52655]
WebSocket REJECT /ws/appointments/ [127.0.0.1:52655]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52655]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52655]
WebSocket connection closed for user None
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52602][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52602][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:52602][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:52602][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52662]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52662]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:52662]
WebSocket REJECT /ws/appointments/ [127.0.0.1:52662]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52662]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52662]
WebSocket connection closed for user None
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52602][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52602][0m
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52602][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52602][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52602][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52602][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:52602][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:52602][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:52602][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:52602][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52667]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52667]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:52667]
WebSocket REJECT /ws/appointments/ [127.0.0.1:52667]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52667]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52667]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:52602][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:52602][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52674]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52674]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:52674]
WebSocket REJECT /ws/appointments/ [127.0.0.1:52674]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52674]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52674]
WebSocket connection closed for user None
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52602][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52602][0m
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52602][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52602][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:52754][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:52754][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52755]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52755]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:52755]
WebSocket REJECT /ws/appointments/ [127.0.0.1:52755]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52755]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52755]
WebSocket connection closed for user None
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52754][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52754][0m
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52754][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52754][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-10/ 200 [0.02, 127.0.0.1:52754][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-10/ 200 [0.02, 127.0.0.1:52754][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52754][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52754][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:52754][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:52754][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52763]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52763]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:52763]
WebSocket REJECT /ws/appointments/ [127.0.0.1:52763]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52763]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52763]
WebSocket connection closed for user None
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52754][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52754][0m
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52754][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52754][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52754][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52754][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.66, 127.0.0.1:52754][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.66, 127.0.0.1:52754][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:52754][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:52754][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52773]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52773]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:52773]
WebSocket REJECT /ws/appointments/ [127.0.0.1:52773]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52773]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52773]
WebSocket connection closed for user None
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52754][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52754][0m
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py changed, reloading.
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:52901][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:52901][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52902]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52902]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:52902]
WebSocket REJECT /ws/appointments/ [127.0.0.1:52902]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52902]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52902]
WebSocket connection closed for user None
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52901][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52901][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.68, 127.0.0.1:52901][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.68, 127.0.0.1:52901][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:52901][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:52901][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52913]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52913]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:52913]
WebSocket REJECT /ws/appointments/ [127.0.0.1:52913]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52913]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52913]
WebSocket connection closed for user None
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52901][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52901][0m
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
Not Found: /api/users/doctor-available-slots/doctor1/2024-09-09/
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52901][0m
[33mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-09/ 404 [0.01, 127.0.0.1:52901][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52901][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:52901][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.84, 127.0.0.1:52901][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.84, 127.0.0.1:52901][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:52901][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:52901][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52953]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52953]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:52953]
WebSocket REJECT /ws/appointments/ [127.0.0.1:52953]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52953]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52953]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:52992][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:52992][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52994]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52994]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:52994]
WebSocket REJECT /ws/appointments/ [127.0.0.1:52994]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52994]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52994]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:52992][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:52992][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52997]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:52997]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:52997]
WebSocket REJECT /ws/appointments/ [127.0.0.1:52997]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52997]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:52997]
WebSocket connection closed for user None
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:52992][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:52992][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.48, 127.0.0.1:52992][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.48, 127.0.0.1:52992][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:52992][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:52992][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53004]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53004]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:53004]
WebSocket REJECT /ws/appointments/ [127.0.0.1:53004]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53004]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53004]
WebSocket connection closed for user None
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\serializers.py changed, reloading.
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\serializers.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53102][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53102][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53103]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53103]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:53103]
WebSocket REJECT /ws/appointments/ [127.0.0.1:53103]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53103]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53103]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53102][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53102][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53107]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53107]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:53107]
WebSocket REJECT /ws/appointments/ [127.0.0.1:53107]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53107]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53107]
WebSocket connection closed for user None
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53102][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53102][0m
Internal Server Error: /api/users/reschedule-appointment/15/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\decorators.py", line 50, in handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 238, in reschedule_appointment
    new_date = new_date.astimezone(pytz.timezone(settings.TIME_ZONE))
NameError: name 'settings' is not defined
Internal Server Error: /api/users/reschedule-appointment/15/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\decorators.py", line 50, in handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 238, in reschedule_appointment
    new_date = new_date.astimezone(pytz.timezone(settings.TIME_ZONE))
NameError: name 'settings' is not defined
[35;1mHTTP POST /api/users/reschedule-appointment/15/ 500 [0.06, 127.0.0.1:53102][0m
[35;1mHTTP POST /api/users/reschedule-appointment/15/ 500 [0.06, 127.0.0.1:53102][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53102][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53102][0m
Internal Server Error: /api/users/reschedule-appointment/15/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\decorators.py", line 50, in handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 238, in reschedule_appointment
    new_date = new_date.astimezone(pytz.timezone(settings.TIME_ZONE))
NameError: name 'settings' is not defined
Internal Server Error: /api/users/reschedule-appointment/15/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\rest_framework\decorators.py", line 50, in handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 238, in reschedule_appointment
    new_date = new_date.astimezone(pytz.timezone(settings.TIME_ZONE))
NameError: name 'settings' is not defined
[35;1mHTTP POST /api/users/reschedule-appointment/15/ 500 [0.05, 127.0.0.1:53102][0m
[35;1mHTTP POST /api/users/reschedule-appointment/15/ 500 [0.05, 127.0.0.1:53102][0m
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py changed, reloading.
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.60, 127.0.0.1:53227][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.60, 127.0.0.1:53227][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53227][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53227][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53245]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53245]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:53245]
WebSocket REJECT /ws/appointments/ [127.0.0.1:53245]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53245]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53245]
WebSocket connection closed for user None
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53227][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53227][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.45, 127.0.0.1:53227][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.45, 127.0.0.1:53227][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53227][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53227][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53274]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53274]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:53274]
WebSocket REJECT /ws/appointments/ [127.0.0.1:53274]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53274]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53274]
WebSocket connection closed for user None
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py changed, reloading.
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53363][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53363][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53364]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53364]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:53364]
WebSocket REJECT /ws/appointments/ [127.0.0.1:53364]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53364]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53364]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53363][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53363][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53368]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53368]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:53368]
WebSocket REJECT /ws/appointments/ [127.0.0.1:53368]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53368]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53368]
WebSocket connection closed for user None
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53363][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53363][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.23, 127.0.0.1:53363][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.23, 127.0.0.1:53363][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53363][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53363][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53375]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53375]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:53375]
WebSocket REJECT /ws/appointments/ [127.0.0.1:53375]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53375]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53375]
WebSocket connection closed for user None
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53363][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53363][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.44, 127.0.0.1:53363][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.44, 127.0.0.1:53363][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53363][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53363][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53399]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53399]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:53399]
WebSocket REJECT /ws/appointments/ [127.0.0.1:53399]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53399]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53399]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53450][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53450][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53451]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53451]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:53451]
WebSocket REJECT /ws/appointments/ [127.0.0.1:53451]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53451]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53451]
WebSocket connection closed for user None
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:53450][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:53450][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.38, 127.0.0.1:53450][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.38, 127.0.0.1:53450][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53450][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53450][0m
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53460]
WebSocket HANDSHAKING /ws/appointments/ [127.0.0.1:53460]
Unauthenticated WebSocket connection attempt
WebSocket REJECT /ws/appointments/ [127.0.0.1:53460]
WebSocket REJECT /ws/appointments/ [127.0.0.1:53460]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53460]
WebSocket DISCONNECT /ws/appointments/ [127.0.0.1:53460]
WebSocket connection closed for user None
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53599][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.61, 127.0.0.1:53599][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.61, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53599][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.44, 127.0.0.1:53599][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.44, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 127.0.0.1:53599][0m
Not Found: /api/users/doctor-available-slots/2/2024-09-10/
Not Found: /api/users/doctor-available-slots/2/2024-09-10/
[33mHTTP GET /api/users/doctor-available-slots/2/2024-09-10/ 404 [0.01, 127.0.0.1:53599][0m
[33mHTTP GET /api/users/doctor-available-slots/2/2024-09-10/ 404 [0.01, 127.0.0.1:53599][0m
Not Found: /api/users/doctor-available-slots/2/2024-09-08/
Not Found: /api/users/doctor-available-slots/2/2024-09-08/
[33mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 404 [0.01, 127.0.0.1:53599][0m
[33mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 404 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:53599][0m
Not Found: /api/users/doctor-available-slots/5/2024-09-08/
Not Found: /api/users/doctor-available-slots/5/2024-09-08/
[33mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 404 [0.01, 127.0.0.1:53599][0m
[33mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 404 [0.01, 127.0.0.1:53599][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.00, 127.0.0.1:53599][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.00, 127.0.0.1:53599][0m
Not Found: /api/users/doctor-available-slots/5/2024-09-10/
Not Found: /api/users/doctor-available-slots/5/2024-09-10/
[33mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 404 [0.01, 127.0.0.1:53599][0m
[33mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 404 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:53599][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:53599][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.52, 127.0.0.1:53599][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.52, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53599][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.67, 127.0.0.1:53599][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.67, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53599][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.66, 127.0.0.1:53599][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.66, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53599][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53764][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53764][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53764][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53764][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:53764][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:53764][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.82, 127.0.0.1:53764][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.82, 127.0.0.1:53764][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.05, 127.0.0.1:53764][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.05, 127.0.0.1:53764][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53764][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53764][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.53, 127.0.0.1:53764][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.53, 127.0.0.1:53764][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53764][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53764][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53821][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53821][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53821][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53821][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:53821][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:53821][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.44, 127.0.0.1:53821][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.44, 127.0.0.1:53821][0m
[mHTTP OPTIONS /api/users/cancel-appointment/undefined/ 200 [0.01, 127.0.0.1:53821][0m
[mHTTP OPTIONS /api/users/cancel-appointment/undefined/ 200 [0.01, 127.0.0.1:53821][0m
Not Found: /api/users/cancel-appointment/undefined/
Not Found: /api/users/cancel-appointment/undefined/
[33mHTTP POST /api/users/cancel-appointment/undefined/ 404 [0.01, 127.0.0.1:53821][0m
[33mHTTP POST /api/users/cancel-appointment/undefined/ 404 [0.01, 127.0.0.1:53821][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53821][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53821][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53821][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:53821][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.48, 127.0.0.1:53821][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.48, 127.0.0.1:53821][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53821][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53821][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53907][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53907][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53907][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53907][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:53907][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:53907][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.54, 127.0.0.1:53907][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.54, 127.0.0.1:53907][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53907][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53907][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53955][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:53955][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53955][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53955][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:53955][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:53955][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.46, 127.0.0.1:53955][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.46, 127.0.0.1:53955][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53955][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:53955][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:54132][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:54132][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:54132][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:54132][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:54132][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.01, 127.0.0.1:54132][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.45, 127.0.0.1:54132][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.45, 127.0.0.1:54132][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:54132][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:54132][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:54202][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:54202][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:54202][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:54202][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:54202][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:54202][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:54202][0m
[mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 200 [0.02, 127.0.0.1:54202][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.56, 127.0.0.1:54202][0m
[mHTTP POST /api/users/reschedule-appointment/15/ 200 [1.56, 127.0.0.1:54202][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:54202][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:54202][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:54202][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:54202][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:54202][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:54202][0m
Not Found: /api/users/doctor-available-slots/5/2024-09-10/
Not Found: /api/users/doctor-available-slots/5/2024-09-10/
[33mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 404 [0.01, 127.0.0.1:54202][0m
[33mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 404 [0.01, 127.0.0.1:54202][0m
Not Found: /api/users/doctor-available-slots/5/2024-09-08/
Not Found: /api/users/doctor-available-slots/5/2024-09-08/
[33mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 404 [0.01, 127.0.0.1:54202][0m
[33mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 404 [0.01, 127.0.0.1:54202][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:54202][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:54202][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 127.0.0.1:54202][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 127.0.0.1:54202][0m
Not Found: /api/users/doctor-available-slots/2/2024-09-10/
Not Found: /api/users/doctor-available-slots/2/2024-09-10/
[33mHTTP GET /api/users/doctor-available-slots/2/2024-09-10/ 404 [0.01, 127.0.0.1:54202][0m
[33mHTTP GET /api/users/doctor-available-slots/2/2024-09-10/ 404 [0.01, 127.0.0.1:54202][0m
Not Found: /api/users/doctor-available-slots/2/2024-09-08/
Not Found: /api/users/doctor-available-slots/2/2024-09-08/
[33mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 404 [0.01, 127.0.0.1:54202][0m
[33mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 404 [0.01, 127.0.0.1:54202][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:54202][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:54202][0m
Not Found: /api/users/doctor-available-slots/5/2024-09-10/
Not Found: /api/users/doctor-available-slots/5/2024-09-10/
[33mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 404 [0.01, 127.0.0.1:54202][0m
[33mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 404 [0.01, 127.0.0.1:54202][0m
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py changed, reloading.
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
[mHTTP GET /api/users/specialties/ 200 [0.02, 127.0.0.1:54507][0m
[mHTTP GET /api/users/specialties/ 200 [0.02, 127.0.0.1:54507][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:54507][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:54507][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:54507][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:54507][0m
Attempting to book appointment: Doctor: doctor1, Date: 2024-09-08 22:30:00+00:00
Availability found: doctor1 - 2024-09-08 17:00:00-23:30:00
Existing appointment found: False
Appointment booked successfully: iampatient - doctor1 - 2024-09-08 22:30:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [1.44, 127.0.0.1:54507][0m
[mHTTP POST /api/users/book-appointment/ 201 [1.44, 127.0.0.1:54507][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.03, 127.0.0.1:54507][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.03, 127.0.0.1:54507][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:54515][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:54515][0m
Internal Server Error: /api/users/doctor-available-slots/doctor1/2024-09-08/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'doctor1'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 319, in doctor_available_slots
    doctor = User.objects.get(Q(username=doctor_id) | Q(id=doctor_id), is_doctor=True)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 635, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1468, in build_filter
    return self._add_q(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'doctor1'.
Internal Server Error: /api/users/doctor-available-slots/doctor1/2024-09-08/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'doctor1'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 319, in doctor_available_slots
    doctor = User.objects.get(Q(username=doctor_id) | Q(id=doctor_id), is_doctor=True)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 635, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1468, in build_filter
    return self._add_q(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'doctor1'.
[35;1mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 500 [0.06, 127.0.0.1:54547][0m
[35;1mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 500 [0.06, 127.0.0.1:54547][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:54547][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:54547][0m
Internal Server Error: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'iamdoctor'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 319, in doctor_available_slots
    doctor = User.objects.get(Q(username=doctor_id) | Q(id=doctor_id), is_doctor=True)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 635, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1468, in build_filter
    return self._add_q(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'iamdoctor'.
Internal Server Error: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'iamdoctor'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 319, in doctor_available_slots
    doctor = User.objects.get(Q(username=doctor_id) | Q(id=doctor_id), is_doctor=True)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 635, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1468, in build_filter
    return self._add_q(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'iamdoctor'.
[35;1mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 500 [0.05, 127.0.0.1:54547][0m
[35;1mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 500 [0.05, 127.0.0.1:54547][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/iamdoctor/2024-09-09/ 200 [0.00, 127.0.0.1:54547][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/iamdoctor/2024-09-09/ 200 [0.00, 127.0.0.1:54547][0m
Internal Server Error: /api/users/doctor-available-slots/iamdoctor/2024-09-09/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'iamdoctor'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 319, in doctor_available_slots
    doctor = User.objects.get(Q(username=doctor_id) | Q(id=doctor_id), is_doctor=True)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 635, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1468, in build_filter
    return self._add_q(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'iamdoctor'.
Internal Server Error: /api/users/doctor-available-slots/iamdoctor/2024-09-09/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'iamdoctor'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 319, in doctor_available_slots
    doctor = User.objects.get(Q(username=doctor_id) | Q(id=doctor_id), is_doctor=True)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 635, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1468, in build_filter
    return self._add_q(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'iamdoctor'.
[35;1mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-09/ 500 [0.05, 127.0.0.1:54547][0m
[35;1mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-09/ 500 [0.05, 127.0.0.1:54547][0m
Internal Server Error: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'iamdoctor'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 319, in doctor_available_slots
    doctor = User.objects.get(Q(username=doctor_id) | Q(id=doctor_id), is_doctor=True)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 635, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1468, in build_filter
    return self._add_q(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'iamdoctor'.
Internal Server Error: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'iamdoctor'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 319, in doctor_available_slots
    doctor = User.objects.get(Q(username=doctor_id) | Q(id=doctor_id), is_doctor=True)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 635, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1468, in build_filter
    return self._add_q(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'iamdoctor'.
[35;1mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 500 [0.05, 127.0.0.1:54547][0m
[35;1mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 500 [0.05, 127.0.0.1:54547][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:54547][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:54547][0m
Internal Server Error: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'iamdoctor'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 319, in doctor_available_slots
    doctor = User.objects.get(Q(username=doctor_id) | Q(id=doctor_id), is_doctor=True)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 635, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1468, in build_filter
    return self._add_q(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'iamdoctor'.
Internal Server Error: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'iamdoctor'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 319, in doctor_available_slots
    doctor = User.objects.get(Q(username=doctor_id) | Q(id=doctor_id), is_doctor=True)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 635, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1468, in build_filter
    return self._add_q(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'iamdoctor'.
[35;1mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 500 [0.06, 127.0.0.1:54547][0m
[35;1mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 500 [0.06, 127.0.0.1:54547][0m
Internal Server Error: /api/users/doctor-available-slots/iamdoctor/2024-09-09/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'iamdoctor'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 319, in doctor_available_slots
    doctor = User.objects.get(Q(username=doctor_id) | Q(id=doctor_id), is_doctor=True)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 635, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1468, in build_filter
    return self._add_q(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'iamdoctor'.
Internal Server Error: /api/users/doctor-available-slots/iamdoctor/2024-09-09/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'iamdoctor'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 319, in doctor_available_slots
    doctor = User.objects.get(Q(username=doctor_id) | Q(id=doctor_id), is_doctor=True)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 635, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1468, in build_filter
    return self._add_q(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'iamdoctor'.
[35;1mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-09/ 500 [0.06, 127.0.0.1:54547][0m
[35;1mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-09/ 500 [0.06, 127.0.0.1:54547][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:54547][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:54547][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:54547][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:54547][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:54547][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:54547][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.02, 127.0.0.1:54547][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.02, 127.0.0.1:54547][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.02, 127.0.0.1:54547][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-10/ 200 [0.02, 127.0.0.1:54547][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:54547][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:54547][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:54547][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:54547][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:54547][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:54547][0m
Internal Server Error: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'iamdoctor'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 319, in doctor_available_slots
    doctor = User.objects.get(Q(username=doctor_id) | Q(id=doctor_id), is_doctor=True)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 635, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1468, in build_filter
    return self._add_q(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'iamdoctor'.
Internal Server Error: /api/users/doctor-available-slots/iamdoctor/2024-09-10/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'iamdoctor'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 319, in doctor_available_slots
    doctor = User.objects.get(Q(username=doctor_id) | Q(id=doctor_id), is_doctor=True)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 635, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1468, in build_filter
    return self._add_q(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'iamdoctor'.
[35;1mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 500 [0.07, 127.0.0.1:54547][0m
[35;1mHTTP GET /api/users/doctor-available-slots/iamdoctor/2024-09-10/ 500 [0.07, 127.0.0.1:54547][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:54547][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:54547][0m
Internal Server Error: /api/users/doctor-available-slots/doctor1/2024-09-08/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'doctor1'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 319, in doctor_available_slots
    doctor = User.objects.get(Q(username=doctor_id) | Q(id=doctor_id), is_doctor=True)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 635, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1468, in build_filter
    return self._add_q(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'doctor1'.
Internal Server Error: /api/users/doctor-available-slots/doctor1/2024-09-08/
Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'doctor1'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 518, in thread_handler
    raise exc_info[1]
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\exception.py", line 42, in inner
    response = await get_response(request)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\core\handlers\base.py", line 253, in _get_response_async
    response = await wrapped_callback(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 468, in __call__
    ret = await asyncio.shield(exec_coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\asgiref\sync.py", line 522, in thread_handler
    return func(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\views\decorators\http.py", line 64, in inner
    return func(request, *args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py", line 319, in doctor_available_slots
    doctor = User.objects.get(Q(username=doctor_id) | Q(id=doctor_id), is_doctor=True)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 635, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1468, in build_filter
    return self._add_q(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\venv\lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'doctor1'.
[35;1mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 500 [0.06, 127.0.0.1:54595][0m
[35;1mHTTP GET /api/users/doctor-available-slots/doctor1/2024-09-08/ 500 [0.06, 127.0.0.1:54595][0m
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py changed, reloading.
C:\Github projects\Smart Healthcare Appointment System\smart-healthcare-appointment\backend\users\views.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=127.0.0.1
Listening on TCP address 127.0.0.1:8000
[mHTTP OPTIONS /api/users/patient-dashboard/ 200 [0.00, 127.0.0.1:54827][0m
[mHTTP OPTIONS /api/users/patient-dashboard/ 200 [0.00, 127.0.0.1:54827][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:54827][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:54827][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:54827][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:54827][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:54827][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:54827][0m
[mHTTP OPTIONS /api/users/reschedule-appointment/12/ 200 [0.00, 127.0.0.1:54827][0m
[mHTTP OPTIONS /api/users/reschedule-appointment/12/ 200 [0.00, 127.0.0.1:54827][0m
Sending reschedule notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/reschedule-appointment/12/ 200 [1.41, 127.0.0.1:54827][0m
[mHTTP POST /api/users/reschedule-appointment/12/ 200 [1.41, 127.0.0.1:54827][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:54827][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:54827][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:54827][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:54827][0m
[mHTTP OPTIONS /api/users/doctors-by-specialty/?specialty=1 200 [0.00, 127.0.0.1:54827][0m
[mHTTP OPTIONS /api/users/doctors-by-specialty/?specialty=1 200 [0.00, 127.0.0.1:54827][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:54827][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:54827][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:54827][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:54827][0m
[mHTTP OPTIONS /api/users/book-appointment/ 200 [0.00, 127.0.0.1:54827][0m
[mHTTP OPTIONS /api/users/book-appointment/ 200 [0.00, 127.0.0.1:54827][0m
Attempting to book appointment: Doctor: doctor1, Date: 2024-09-08 23:00:00+00:00
Availability found: doctor1 - 2024-09-08 17:00:00-23:30:00
Existing appointment found: False
Appointment booked successfully: iampatient - doctor1 - 2024-09-08 23:00:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [1.38, 127.0.0.1:54827][0m
[mHTTP POST /api/users/book-appointment/ 201 [1.38, 127.0.0.1:54827][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:54827][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:54827][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:54842][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:54842][0m
Starting trigger_reminder command
Found 0 upcoming appointments
trigger_reminder command completed
[mHTTP OPTIONS /api/users/cancel-appointment/18/ 200 [0.01, 127.0.0.1:55204][0m
[mHTTP OPTIONS /api/users/cancel-appointment/18/ 200 [0.01, 127.0.0.1:55204][0m
Sending cancellation notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/cancel-appointment/18/ 200 [1.35, 127.0.0.1:55204][0m
[mHTTP POST /api/users/cancel-appointment/18/ 200 [1.35, 127.0.0.1:55204][0m
[mHTTP OPTIONS /api/users/cancel-appointment/17/ 200 [0.00, 127.0.0.1:55204][0m
[mHTTP OPTIONS /api/users/cancel-appointment/17/ 200 [0.00, 127.0.0.1:55204][0m
Sending cancellation notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/cancel-appointment/17/ 200 [1.41, 127.0.0.1:55204][0m
[mHTTP POST /api/users/cancel-appointment/17/ 200 [1.41, 127.0.0.1:55204][0m
[mHTTP OPTIONS /api/users/cancel-appointment/15/ 200 [0.00, 127.0.0.1:55204][0m
[mHTTP OPTIONS /api/users/cancel-appointment/15/ 200 [0.00, 127.0.0.1:55204][0m
Sending cancellation notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/cancel-appointment/15/ 200 [1.33, 127.0.0.1:55204][0m
[mHTTP POST /api/users/cancel-appointment/15/ 200 [1.33, 127.0.0.1:55204][0m
[mHTTP OPTIONS /api/users/cancel-appointment/13/ 200 [0.00, 127.0.0.1:55204][0m
[mHTTP OPTIONS /api/users/cancel-appointment/13/ 200 [0.00, 127.0.0.1:55204][0m
Sending cancellation notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/cancel-appointment/13/ 200 [1.35, 127.0.0.1:55204][0m
[mHTTP POST /api/users/cancel-appointment/13/ 200 [1.35, 127.0.0.1:55204][0m
[mHTTP OPTIONS /api/users/cancel-appointment/12/ 200 [0.00, 127.0.0.1:55204][0m
[mHTTP OPTIONS /api/users/cancel-appointment/12/ 200 [0.00, 127.0.0.1:55204][0m
Sending cancellation notification email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/cancel-appointment/12/ 200 [1.28, 127.0.0.1:55204][0m
[mHTTP POST /api/users/cancel-appointment/12/ 200 [1.28, 127.0.0.1:55204][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:55204][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:55204][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 127.0.0.1:55204][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 127.0.0.1:55204][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.00, 127.0.0.1:55204][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.00, 127.0.0.1:55204][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:55204][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:55204][0m
Attempting to book appointment: Doctor: doctor1, Date: 2024-09-08 23:00:00+00:00
Availability found: doctor1 - 2024-09-08 17:00:00-23:30:00
Existing appointment found: False
Appointment booked successfully: iampatient - doctor1 - 2024-09-08 23:00:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [2.41, 127.0.0.1:55204][0m
[mHTTP POST /api/users/book-appointment/ 201 [2.41, 127.0.0.1:55204][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:55204][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:55204][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:55220][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:55220][0m
Starting trigger_reminder command
Found 0 upcoming appointments
trigger_reminder command completed
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:55220][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:55220][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:55220][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:55220][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:55220][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:55220][0m
Attempting to book appointment: Doctor: doctor1, Date: 2024-09-08 22:30:00+00:00
Availability found: doctor1 - 2024-09-08 17:00:00-23:30:00
Existing appointment found: False
Appointment booked successfully: iampatient - doctor1 - 2024-09-08 22:30:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [1.70, 127.0.0.1:55220][0m
[mHTTP POST /api/users/book-appointment/ 201 [1.70, 127.0.0.1:55220][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.03, 127.0.0.1:55220][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.03, 127.0.0.1:55220][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:55270][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:55270][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:55270][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:55270][0m
[mHTTP OPTIONS /api/users/doctors-by-specialty/?specialty=2 200 [0.00, 127.0.0.1:55270][0m
[mHTTP OPTIONS /api/users/doctors-by-specialty/?specialty=2 200 [0.00, 127.0.0.1:55270][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:55270][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:55270][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.00, 127.0.0.1:55270][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.00, 127.0.0.1:55270][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.02, 127.0.0.1:55270][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.02, 127.0.0.1:55270][0m
Starting trigger_reminder command
Found 0 upcoming appointments
trigger_reminder command completed
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:55270][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:55270][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:55270][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.01, 127.0.0.1:55270][0m
Starting trigger_reminder command
Found 0 upcoming appointments
trigger_reminder command completed
Starting trigger_reminder command
Found 0 upcoming appointments
trigger_reminder command completed
[mHTTP OPTIONS /api/users/login/ 200 [0.00, 127.0.0.1:55749][0m
[mHTTP OPTIONS /api/users/login/ 200 [0.00, 127.0.0.1:55749][0m
[mHTTP POST /api/users/login/ 200 [0.25, 127.0.0.1:55749][0m
[mHTTP POST /api/users/login/ 200 [0.25, 127.0.0.1:55749][0m
[mHTTP OPTIONS /api/users/doctor-dashboard/ 200 [0.00, 127.0.0.1:55749][0m
[mHTTP OPTIONS /api/users/doctor-dashboard/ 200 [0.00, 127.0.0.1:55749][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:55749][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:55749][0m
[mHTTP OPTIONS /api/users/doctor-availability/ 200 [0.00, 127.0.0.1:55749][0m
[mHTTP OPTIONS /api/users/doctor-availability/ 200 [0.00, 127.0.0.1:55749][0m
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:55749][0m
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:55749][0m
[mHTTP POST /api/users/doctor-availability/ 201 [0.02, 127.0.0.1:55766][0m
[mHTTP POST /api/users/doctor-availability/ 201 [0.02, 127.0.0.1:55766][0m
[mHTTP OPTIONS /api/users/doctor-availability/5/ 200 [0.01, 127.0.0.1:55767][0m
[mHTTP OPTIONS /api/users/doctor-availability/5/ 200 [0.01, 127.0.0.1:55767][0m
[mHTTP DELETE /api/users/doctor-availability/5/ 204 [0.01, 127.0.0.1:55767][0m
[mHTTP DELETE /api/users/doctor-availability/5/ 204 [0.01, 127.0.0.1:55767][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:55767][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:55767][0m
[mHTTP POST /api/users/login/ 200 [0.23, 127.0.0.1:55777][0m
[mHTTP POST /api/users/login/ 200 [0.23, 127.0.0.1:55777][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:55777][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:55777][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:55777][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:55777][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:55777][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:55777][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:55777][0m
[mHTTP GET /api/users/doctor-available-slots/2/2024-09-08/ 200 [0.02, 127.0.0.1:55777][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:55788][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:55788][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.02, 127.0.0.1:55788][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.02, 127.0.0.1:55788][0m
Attempting to book appointment: Doctor: iamdoctor, Date: 2024-09-08 23:00:00+00:00
Availability found: iamdoctor - 2024-09-08 17:00:00-23:30:00
Existing appointment found: False
Appointment booked successfully: iampatient - iamdoctor - 2024-09-08 23:00:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [1.02, 127.0.0.1:55796][0m
[mHTTP POST /api/users/book-appointment/ 201 [1.02, 127.0.0.1:55796][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.03, 127.0.0.1:55796][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-08/ 200 [0.03, 127.0.0.1:55796][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:55805][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:55805][0m
Starting trigger_reminder command
Found 0 upcoming appointments
trigger_reminder command completed
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:55827][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:55827][0m
[mHTTP POST /api/users/login/ 200 [0.24, 127.0.0.1:55829][0m
[mHTTP POST /api/users/login/ 200 [0.24, 127.0.0.1:55829][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:55829][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:55829][0m
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:55829][0m
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:55829][0m
[mHTTP POST /api/users/doctor-availability/ 201 [0.02, 127.0.0.1:55837][0m
[mHTTP POST /api/users/doctor-availability/ 201 [0.02, 127.0.0.1:55837][0m
[mHTTP POST /api/users/login/ 200 [0.24, 127.0.0.1:55837][0m
[mHTTP POST /api/users/login/ 200 [0.24, 127.0.0.1:55837][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:55837][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:55837][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:55837][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:55837][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:55837][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:55837][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.02, 127.0.0.1:55837][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.02, 127.0.0.1:55837][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/5/2024-09-09/ 200 [0.00, 127.0.0.1:55837][0m
[mHTTP OPTIONS /api/users/doctor-available-slots/5/2024-09-09/ 200 [0.00, 127.0.0.1:55837][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-09/ 200 [0.02, 127.0.0.1:55837][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-09/ 200 [0.02, 127.0.0.1:55837][0m
Attempting to book appointment: Doctor: iamdoctor, Date: 2024-09-09 00:30:00+00:00
Availability found: iamdoctor - 2024-09-09 00:00:00-05:30:00
Existing appointment found: False
Appointment booked successfully: iampatient - iamdoctor - 2024-09-09 00:30:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [0.94, 127.0.0.1:55853][0m
[mHTTP POST /api/users/book-appointment/ 201 [0.94, 127.0.0.1:55853][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-09/ 200 [0.04, 127.0.0.1:55853][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-09/ 200 [0.04, 127.0.0.1:55853][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.04, 127.0.0.1:55862][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.04, 127.0.0.1:55862][0m
Starting trigger_reminder command
Found 0 upcoming appointments
trigger_reminder command completed
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:55875][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:55875][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:55875][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:55875][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.02, 127.0.0.1:55875][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.02, 127.0.0.1:55875][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-09/ 200 [0.02, 127.0.0.1:55875][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-09/ 200 [0.02, 127.0.0.1:55875][0m
Attempting to book appointment: Doctor: iamdoctor, Date: 2024-09-09 00:00:00+00:00
Availability found: iamdoctor - 2024-09-09 00:00:00-05:30:00
Existing appointment found: False
Appointment booked successfully: iampatient - iamdoctor - 2024-09-09 00:00:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [0.93, 127.0.0.1:55875][0m
[mHTTP POST /api/users/book-appointment/ 201 [0.93, 127.0.0.1:55875][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-09/ 200 [0.03, 127.0.0.1:55875][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-09/ 200 [0.03, 127.0.0.1:55875][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:55886][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:55886][0m
Starting trigger_reminder command
Found 0 upcoming appointments
trigger_reminder command completed
Starting trigger_reminder command
Found 0 upcoming appointments
trigger_reminder command completed
Starting trigger_reminder command
Founder 0 upcoming appointments
trigger_reminder command completed
[mHTTP POST /api/users/login/ 200 [0.25, 127.0.0.1:56103][0m
[mHTTP POST /api/users/login/ 200 [0.25, 127.0.0.1:56103][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:56103][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.02, 127.0.0.1:56103][0m
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:56103][0m
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:56103][0m
[mHTTP POST /api/users/doctor-availability/ 201 [0.02, 127.0.0.1:56111][0m
[mHTTP POST /api/users/doctor-availability/ 201 [0.02, 127.0.0.1:56111][0m
[mHTTP OPTIONS /api/users/doctor-availability/9/ 200 [0.00, 127.0.0.1:56111][0m
[mHTTP OPTIONS /api/users/doctor-availability/9/ 200 [0.00, 127.0.0.1:56111][0m
[mHTTP DELETE /api/users/doctor-availability/9/ 204 [0.02, 127.0.0.1:56111][0m
[mHTTP DELETE /api/users/doctor-availability/9/ 204 [0.02, 127.0.0.1:56111][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.03, 127.0.0.1:56111][0m
[mHTTP GET /api/users/doctor-dashboard/ 200 [0.03, 127.0.0.1:56111][0m
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:56111][0m
[mHTTP GET /api/users/doctor-availability/ 200 [0.01, 127.0.0.1:56111][0m
[mHTTP POST /api/users/login/ 200 [0.25, 127.0.0.1:56111][0m
[mHTTP POST /api/users/login/ 200 [0.25, 127.0.0.1:56111][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:56111][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.02, 127.0.0.1:56111][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:56111][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:56111][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:56111][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.01, 127.0.0.1:56111][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:56111][0m
[mHTTP GET /api/users/doctors-by-specialty/?specialty=2 200 [0.01, 127.0.0.1:56111][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-09/ 200 [0.02, 127.0.0.1:56111][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-09/ 200 [0.02, 127.0.0.1:56111][0m
Attempting to book appointment: Doctor: iamdoctor, Date: 2024-09-09 22:30:00+00:00
Availability found: iamdoctor - 2024-09-09 17:00:00-23:30:00
Existing appointment found: False
Appointment booked successfully: iampatient - iamdoctor - 2024-09-09 22:30:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
[mHTTP POST /api/users/book-appointment/ 201 [1.12, 127.0.0.1:56111][0m
[mHTTP POST /api/users/book-appointment/ 201 [1.12, 127.0.0.1:56111][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:56133][0m
[mHTTP GET /api/users/patient-dashboard/ 200 [0.03, 127.0.0.1:56133][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-09/ 200 [0.04, 127.0.0.1:56111][0m
[mHTTP GET /api/users/doctor-available-slots/5/2024-09-09/ 200 [0.04, 127.0.0.1:56111][0m
Starting trigger_reminder command
Found 1 upcoming appointments
Scheduling reminder for appointment 24
trigger_reminder command completed
Starting trigger_reminder command
Found 1 upcoming appointments
Sending reminder for appointment 24
Celery task send_appointment_reminder[24] started
Found appointment: iampatient - iamdoctor - 2024-09-09 22:30:00+00:00
Sending email to ['tolakari18@gmail.com']
Email sent successfully
Celery task send_appointment_reminder[24] completed
trigger_reminder command completed
Starting trigger_reminder command
Found 1 upcoming appointments
Sending reminder for appointment 24
Celery task send_appointment_reminder[24] started
Found appointment: iampatient - iamdoctor - 2024-09-09 22:30:00+00:00
Sending email to ['tolakari18@gmail.com']
Email sent successfully
Celery task send_appointment_reminder[24] completed
trigger_reminder command completed
Starting trigger_reminder command
Found 1 upcoming appointments
Sending reminder for appointment 24
Celery task send_appointment_reminder[24] started
Found appointment: iampatient - iamdoctor - 2024-09-09 22:30:00+00:00
Sending email to ['tolakari18@gmail.com']
Email sent successfully
Celery task send_appointment_reminder[24] completed
trigger_reminder command completed
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:56421][0m
[mHTTP GET /api/users/specialties/ 200 [0.01, 127.0.0.1:56421][0m
Signal handler <bound method DjangoFixup.on_import_modules of <celery.fixups.django.DjangoFixup object at 0x7fc946dbd4b0>> raised: ImproperlyConfigured('Error loading psycopg2 or psycopg module')
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 25, in <module>
    import psycopg as Database
ModuleNotFoundError: No module named 'psycopg'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 27, in <module>
    import psycopg2 as Database
ModuleNotFoundError: No module named 'psycopg2'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/celery/utils/dispatch/signal.py", line 276, in send
    response = receiver(signal=self, sender=sender, **named)
  File "/usr/local/lib/python3.10/site-packages/celery/fixups/django.py", line 97, in on_import_modules
    self.worker_fixup.validate_models()
  File "/usr/local/lib/python3.10/site-packages/celery/fixups/django.py", line 135, in validate_models
    self.django_setup()
  File "/usr/local/lib/python3.10/site-packages/celery/fixups/django.py", line 131, in django_setup
    django.setup()
  File "/usr/local/lib/python3.10/site-packages/django/__init__.py", line 24, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "/usr/local/lib/python3.10/site-packages/django/apps/registry.py", line 116, in populate
    app_config.import_models()
  File "/usr/local/lib/python3.10/site-packages/django/apps/config.py", line 269, in import_models
    self.models_module = import_module(models_module_name)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/usr/local/lib/python3.10/site-packages/django/contrib/auth/models.py", line 3, in <module>
    from django.contrib.auth.base_user import AbstractBaseUser, BaseUserManager
  File "/usr/local/lib/python3.10/site-packages/django/contrib/auth/base_user.py", line 58, in <module>
    class AbstractBaseUser(models.Model):
  File "/usr/local/lib/python3.10/site-packages/django/db/models/base.py", line 143, in __new__
    new_class.add_to_class("_meta", Options(meta, app_label))
  File "/usr/local/lib/python3.10/site-packages/django/db/models/base.py", line 371, in add_to_class
    value.contribute_to_class(cls, name)
  File "/usr/local/lib/python3.10/site-packages/django/db/models/options.py", line 243, in contribute_to_class
    self.db_table, connection.ops.max_name_length()
  File "/usr/local/lib/python3.10/site-packages/django/utils/connection.py", line 15, in __getattr__
    return getattr(self._connections[self._alias], item)
  File "/usr/local/lib/python3.10/site-packages/django/utils/connection.py", line 62, in __getitem__
    conn = self.create_connection(alias)
  File "/usr/local/lib/python3.10/site-packages/django/db/utils.py", line 193, in create_connection
    backend = load_backend(db["ENGINE"])
  File "/usr/local/lib/python3.10/site-packages/django/db/utils.py", line 113, in load_backend
    return import_module("%s.base" % backend_name)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 29, in <module>
    raise ImproperlyConfigured("Error loading psycopg2 or psycopg module")
django.core.exceptions.ImproperlyConfigured: Error loading psycopg2 or psycopg module
Signal handler <bound method DjangoFixup.on_import_modules of <celery.fixups.django.DjangoFixup object at 0x7f405615d4b0>> raised: ImproperlyConfigured('Error loading psycopg2 or psycopg module')
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 25, in <module>
    import psycopg as Database
ModuleNotFoundError: No module named 'psycopg'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 27, in <module>
    import psycopg2 as Database
ModuleNotFoundError: No module named 'psycopg2'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/celery/utils/dispatch/signal.py", line 276, in send
    response = receiver(signal=self, sender=sender, **named)
  File "/usr/local/lib/python3.10/site-packages/celery/fixups/django.py", line 97, in on_import_modules
    self.worker_fixup.validate_models()
  File "/usr/local/lib/python3.10/site-packages/celery/fixups/django.py", line 135, in validate_models
    self.django_setup()
  File "/usr/local/lib/python3.10/site-packages/celery/fixups/django.py", line 131, in django_setup
    django.setup()
  File "/usr/local/lib/python3.10/site-packages/django/__init__.py", line 24, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "/usr/local/lib/python3.10/site-packages/django/apps/registry.py", line 116, in populate
    app_config.import_models()
  File "/usr/local/lib/python3.10/site-packages/django/apps/config.py", line 269, in import_models
    self.models_module = import_module(models_module_name)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/usr/local/lib/python3.10/site-packages/django/contrib/auth/models.py", line 3, in <module>
    from django.contrib.auth.base_user import AbstractBaseUser, BaseUserManager
  File "/usr/local/lib/python3.10/site-packages/django/contrib/auth/base_user.py", line 58, in <module>
    class AbstractBaseUser(models.Model):
  File "/usr/local/lib/python3.10/site-packages/django/db/models/base.py", line 143, in __new__
    new_class.add_to_class("_meta", Options(meta, app_label))
  File "/usr/local/lib/python3.10/site-packages/django/db/models/base.py", line 371, in add_to_class
    value.contribute_to_class(cls, name)
  File "/usr/local/lib/python3.10/site-packages/django/db/models/options.py", line 243, in contribute_to_class
    self.db_table, connection.ops.max_name_length()
  File "/usr/local/lib/python3.10/site-packages/django/utils/connection.py", line 15, in __getattr__
    return getattr(self._connections[self._alias], item)
  File "/usr/local/lib/python3.10/site-packages/django/utils/connection.py", line 62, in __getitem__
    conn = self.create_connection(alias)
  File "/usr/local/lib/python3.10/site-packages/django/db/utils.py", line 193, in create_connection
    backend = load_backend(db["ENGINE"])
  File "/usr/local/lib/python3.10/site-packages/django/db/utils.py", line 113, in load_backend
    return import_module("%s.base" % backend_name)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 29, in <module>
    raise ImproperlyConfigured("Error loading psycopg2 or psycopg module")
django.core.exceptions.ImproperlyConfigured: Error loading psycopg2 or psycopg module
Signal handler <promise@0x7fc946e8bc40 --> <bound method Celery._autodiscover_tasks of <Celery smart_healthcare at 0x7fc948472b90>>> raised: ImproperlyConfigured('Error loading psycopg2 or psycopg module')
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 25, in <module>
    import psycopg as Database
ModuleNotFoundError: No module named 'psycopg'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 27, in <module>
    import psycopg2 as Database
ModuleNotFoundError: No module named 'psycopg2'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/celery/utils/dispatch/signal.py", line 276, in send
    response = receiver(signal=self, sender=sender, **named)
  File "/usr/local/lib/python3.10/site-packages/vine/promises.py", line 161, in __call__
    return self.throw()
  File "/usr/local/lib/python3.10/site-packages/vine/promises.py", line 158, in __call__
    retval = fun(*final_args, **final_kwargs)
  File "/usr/local/lib/python3.10/site-packages/celery/app/base.py", line 692, in _autodiscover_tasks
    return self._autodiscover_tasks_from_fixups(related_name)
  File "/usr/local/lib/python3.10/site-packages/celery/app/base.py", line 701, in _autodiscover_tasks_from_fixups
    return self._autodiscover_tasks_from_names([
  File "/usr/local/lib/python3.10/site-packages/celery/app/base.py", line 696, in _autodiscover_tasks_from_names
    return self.loader.autodiscover_tasks(
  File "/usr/local/lib/python3.10/site-packages/celery/loaders/base.py", line 220, in autodiscover_tasks
    mod.__name__ for mod in autodiscover_tasks(packages or (),
  File "/usr/local/lib/python3.10/site-packages/celery/loaders/base.py", line 246, in autodiscover_tasks
    return [find_related_module(pkg, related_name) for pkg in packages]
  File "/usr/local/lib/python3.10/site-packages/celery/loaders/base.py", line 246, in <listcomp>
    return [find_related_module(pkg, related_name) for pkg in packages]
  File "/usr/local/lib/python3.10/site-packages/celery/loaders/base.py", line 270, in find_related_module
    return importlib.import_module(module_name)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/users/tasks.py", line 5, in <module>
    from .models import Appointment
  File "/app/users/models.py", line 2, in <module>
    from django.contrib.auth.models import AbstractUser
  File "/usr/local/lib/python3.10/site-packages/django/contrib/auth/models.py", line 3, in <module>
    from django.contrib.auth.base_user import AbstractBaseUser, BaseUserManager
  File "/usr/local/lib/python3.10/site-packages/django/contrib/auth/base_user.py", line 58, in <module>
    class AbstractBaseUser(models.Model):
  File "/usr/local/lib/python3.10/site-packages/django/db/models/base.py", line 143, in __new__
    new_class.add_to_class("_meta", Options(meta, app_label))
  File "/usr/local/lib/python3.10/site-packages/django/db/models/base.py", line 371, in add_to_class
    value.contribute_to_class(cls, name)
  File "/usr/local/lib/python3.10/site-packages/django/db/models/options.py", line 243, in contribute_to_class
    self.db_table, connection.ops.max_name_length()
  File "/usr/local/lib/python3.10/site-packages/django/utils/connection.py", line 15, in __getattr__
    return getattr(self._connections[self._alias], item)
  File "/usr/local/lib/python3.10/site-packages/django/utils/connection.py", line 62, in __getitem__
    conn = self.create_connection(alias)
  File "/usr/local/lib/python3.10/site-packages/django/db/utils.py", line 193, in create_connection
    backend = load_backend(db["ENGINE"])
  File "/usr/local/lib/python3.10/site-packages/django/db/utils.py", line 113, in load_backend
    return import_module("%s.base" % backend_name)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 29, in <module>
    raise ImproperlyConfigured("Error loading psycopg2 or psycopg module")
django.core.exceptions.ImproperlyConfigured: Error loading psycopg2 or psycopg module
Signal handler <promise@0x7f405622bc40 --> <bound method Celery._autodiscover_tasks of <Celery smart_healthcare at 0x7f4057812b90>>> raised: ImproperlyConfigured('Error loading psycopg2 or psycopg module')
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 25, in <module>
    import psycopg as Database
ModuleNotFoundError: No module named 'psycopg'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 27, in <module>
    import psycopg2 as Database
ModuleNotFoundError: No module named 'psycopg2'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/celery/utils/dispatch/signal.py", line 276, in send
    response = receiver(signal=self, sender=sender, **named)
  File "/usr/local/lib/python3.10/site-packages/vine/promises.py", line 161, in __call__
    return self.throw()
  File "/usr/local/lib/python3.10/site-packages/vine/promises.py", line 158, in __call__
    retval = fun(*final_args, **final_kwargs)
  File "/usr/local/lib/python3.10/site-packages/celery/app/base.py", line 692, in _autodiscover_tasks
    return self._autodiscover_tasks_from_fixups(related_name)
  File "/usr/local/lib/python3.10/site-packages/celery/app/base.py", line 701, in _autodiscover_tasks_from_fixups
    return self._autodiscover_tasks_from_names([
  File "/usr/local/lib/python3.10/site-packages/celery/app/base.py", line 696, in _autodiscover_tasks_from_names
    return self.loader.autodiscover_tasks(
  File "/usr/local/lib/python3.10/site-packages/celery/loaders/base.py", line 220, in autodiscover_tasks
    mod.__name__ for mod in autodiscover_tasks(packages or (),
  File "/usr/local/lib/python3.10/site-packages/celery/loaders/base.py", line 246, in autodiscover_tasks
    return [find_related_module(pkg, related_name) for pkg in packages]
  File "/usr/local/lib/python3.10/site-packages/celery/loaders/base.py", line 246, in <listcomp>
    return [find_related_module(pkg, related_name) for pkg in packages]
  File "/usr/local/lib/python3.10/site-packages/celery/loaders/base.py", line 270, in find_related_module
    return importlib.import_module(module_name)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/users/tasks.py", line 5, in <module>
    from .models import Appointment
  File "/app/users/models.py", line 2, in <module>
    from django.contrib.auth.models import AbstractUser
  File "/usr/local/lib/python3.10/site-packages/django/contrib/auth/models.py", line 3, in <module>
    from django.contrib.auth.base_user import AbstractBaseUser, BaseUserManager
  File "/usr/local/lib/python3.10/site-packages/django/contrib/auth/base_user.py", line 58, in <module>
    class AbstractBaseUser(models.Model):
  File "/usr/local/lib/python3.10/site-packages/django/db/models/base.py", line 143, in __new__
    new_class.add_to_class("_meta", Options(meta, app_label))
  File "/usr/local/lib/python3.10/site-packages/django/db/models/base.py", line 371, in add_to_class
    value.contribute_to_class(cls, name)
  File "/usr/local/lib/python3.10/site-packages/django/db/models/options.py", line 243, in contribute_to_class
    self.db_table, connection.ops.max_name_length()
  File "/usr/local/lib/python3.10/site-packages/django/utils/connection.py", line 15, in __getattr__
    return getattr(self._connections[self._alias], item)
  File "/usr/local/lib/python3.10/site-packages/django/utils/connection.py", line 62, in __getitem__
    conn = self.create_connection(alias)
  File "/usr/local/lib/python3.10/site-packages/django/db/utils.py", line 193, in create_connection
    backend = load_backend(db["ENGINE"])
  File "/usr/local/lib/python3.10/site-packages/django/db/utils.py", line 113, in load_backend
    return import_module("%s.base" % backend_name)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 29, in <module>
    raise ImproperlyConfigured("Error loading psycopg2 or psycopg module")
django.core.exceptions.ImproperlyConfigured: Error loading psycopg2 or psycopg module
Watching for file changes with StatReloader
Watching for file changes with StatReloader
/app/smart_healthcare/settings.py changed, reloading.
/app/smart_healthcare/settings.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=0.0.0.0
Listening on TCP address 0.0.0.0:8000
/app/smart_healthcare/celery.py changed, reloading.
/app/smart_healthcare/celery.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=0.0.0.0
Listening on TCP address 0.0.0.0:8000
/app/smart_healthcare/celery.py changed, reloading.
/app/smart_healthcare/celery.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=0.0.0.0
Listening on TCP address 0.0.0.0:8000
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=0.0.0.0
Listening on TCP address 0.0.0.0:8000
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=0.0.0.0
Listening on TCP address 0.0.0.0:8000
Not Found: /
Not Found: /
HTTP GET / 404 [0.02, 172.18.0.1:52676]
HTTP GET / 404 [0.02, 172.18.0.1:52676]
Not Found: /favicon.ico
Not Found: /favicon.ico
HTTP GET /favicon.ico 404 [0.01, 172.18.0.1:52676]
HTTP GET /favicon.ico 404 [0.01, 172.18.0.1:52676]
HTTP OPTIONS /api/users/login/ 200 [0.00, 172.18.0.1:35052]
HTTP OPTIONS /api/users/login/ 200 [0.00, 172.18.0.1:35052]
Bad Request: /api/users/login/
Bad Request: /api/users/login/
HTTP POST /api/users/login/ 400 [0.02, 172.18.0.1:35052]
HTTP POST /api/users/login/ 400 [0.02, 172.18.0.1:35052]
Bad Request: /api/users/login/
Bad Request: /api/users/login/
HTTP POST /api/users/login/ 400 [0.01, 172.18.0.1:36176]
HTTP POST /api/users/login/ 400 [0.01, 172.18.0.1:36176]
HTTP GET /api/users/specialties/ 200 [0.01, 172.18.0.1:43880]
HTTP GET /api/users/specialties/ 200 [0.01, 172.18.0.1:43880]
HTTP OPTIONS /api/users/register/ 200 [0.00, 172.18.0.1:51456]
HTTP OPTIONS /api/users/register/ 200 [0.00, 172.18.0.1:51456]
HTTP POST /api/users/register/ 201 [0.18, 172.18.0.1:51456]
HTTP POST /api/users/register/ 201 [0.18, 172.18.0.1:51456]
HTTP POST /api/users/login/ 200 [0.17, 172.18.0.1:51456]
HTTP POST /api/users/login/ 200 [0.17, 172.18.0.1:51456]
HTTP OPTIONS /api/users/patient-dashboard/ 200 [0.00, 172.18.0.1:51456]
HTTP OPTIONS /api/users/patient-dashboard/ 200 [0.00, 172.18.0.1:51456]
HTTP GET /api/users/patient-dashboard/ 200 [0.02, 172.18.0.1:51456]
HTTP GET /api/users/patient-dashboard/ 200 [0.02, 172.18.0.1:51456]
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=0.0.0.0
Listening on TCP address 0.0.0.0:8000
Not Found: /
Not Found: /
HTTP GET / 404 [0.02, 172.18.0.1:53434]
HTTP GET / 404 [0.02, 172.18.0.1:53434]
HTTP GET /api/users/specialties/ 200 [0.02, 172.18.0.1:39408]
HTTP GET /api/users/specialties/ 200 [0.02, 172.18.0.1:39408]
HTTP POST /api/users/register/ 201 [0.18, 172.18.0.1:52446]
HTTP POST /api/users/register/ 201 [0.18, 172.18.0.1:52446]
HTTP POST /api/users/login/ 200 [0.17, 172.18.0.1:52446]
HTTP POST /api/users/login/ 200 [0.17, 172.18.0.1:52446]
HTTP OPTIONS /api/users/doctor-dashboard/ 200 [0.00, 172.18.0.1:52446]
HTTP OPTIONS /api/users/doctor-dashboard/ 200 [0.00, 172.18.0.1:52446]
HTTP GET /api/users/doctor-dashboard/ 200 [0.02, 172.18.0.1:52446]
HTTP GET /api/users/doctor-dashboard/ 200 [0.02, 172.18.0.1:52446]
HTTP OPTIONS /api/users/doctor-availability/ 200 [0.00, 172.18.0.1:54928]
HTTP OPTIONS /api/users/doctor-availability/ 200 [0.00, 172.18.0.1:54928]
HTTP GET /api/users/doctor-availability/ 200 [0.01, 172.18.0.1:54928]
HTTP GET /api/users/doctor-availability/ 200 [0.01, 172.18.0.1:54928]
HTTP POST /api/users/doctor-availability/ 201 [0.01, 172.18.0.1:38708]
HTTP POST /api/users/doctor-availability/ 201 [0.01, 172.18.0.1:38708]
HTTP GET /api/users/doctor-dashboard/ 200 [0.02, 172.18.0.1:38708]
HTTP GET /api/users/doctor-dashboard/ 200 [0.02, 172.18.0.1:38708]
HTTP POST /api/users/login/ 200 [0.17, 172.18.0.1:34426]
HTTP POST /api/users/login/ 200 [0.17, 172.18.0.1:34426]
HTTP GET /api/users/patient-dashboard/ 200 [0.01, 172.18.0.1:34426]
HTTP GET /api/users/patient-dashboard/ 200 [0.01, 172.18.0.1:34426]
HTTP GET /api/users/specialties/ 200 [0.01, 172.18.0.1:34426]
HTTP GET /api/users/specialties/ 200 [0.01, 172.18.0.1:34426]
HTTP OPTIONS /api/users/doctors-by-specialty/?specialty=1 200 [0.00, 172.18.0.1:34426]
HTTP OPTIONS /api/users/doctors-by-specialty/?specialty=1 200 [0.00, 172.18.0.1:34426]
HTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 172.18.0.1:34426]
HTTP GET /api/users/doctors-by-specialty/?specialty=1 200 [0.02, 172.18.0.1:34426]
HTTP OPTIONS /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.00, 172.18.0.1:34426]
HTTP OPTIONS /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.00, 172.18.0.1:34426]
HTTP GET /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.03, 172.18.0.1:34426]
HTTP GET /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.03, 172.18.0.1:34426]
HTTP OPTIONS /api/users/book-appointment/ 200 [0.00, 172.18.0.1:35970]
HTTP OPTIONS /api/users/book-appointment/ 200 [0.00, 172.18.0.1:35970]
Attempting to book appointment: Doctor: iamdoctor, Date: 2024-09-09 16:30:00+00:00
Availability found: iamdoctor - 2024-09-09 15:00:00-22:30:00
Existing appointment found: False
Appointment booked successfully: iampatient - iamdoctor - 2024-09-09 16:30:00+00:00
Sending booking confirmation email to tolakari18@gmail.com
Email sent successfully to ['tolakari18@gmail.com']
HTTP POST /api/users/book-appointment/ 201 [1.18, 172.18.0.1:35970]
HTTP POST /api/users/book-appointment/ 201 [1.18, 172.18.0.1:35970]
HTTP GET /api/users/patient-dashboard/ 200 [0.03, 172.18.0.1:35984]
HTTP GET /api/users/patient-dashboard/ 200 [0.03, 172.18.0.1:35984]
HTTP GET /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.04, 172.18.0.1:35970]
HTTP GET /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.04, 172.18.0.1:35970]
HTTP GET /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.03, 172.18.0.1:35970]
HTTP GET /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.03, 172.18.0.1:35970]
HTTP GET /api/users/patient-dashboard/ 200 [0.02, 172.18.0.1:35970]
HTTP GET /api/users/patient-dashboard/ 200 [0.02, 172.18.0.1:35970]
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=0.0.0.0
Listening on TCP address 0.0.0.0:8000
HTTP POST /api/users/login/ 200 [0.18, 172.18.0.1:39146]
HTTP POST /api/users/login/ 200 [0.18, 172.18.0.1:39146]
HTTP GET /api/users/doctor-dashboard/ 200 [0.03, 172.18.0.1:39146]
HTTP GET /api/users/doctor-dashboard/ 200 [0.03, 172.18.0.1:39146]
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=0.0.0.0
Listening on TCP address 0.0.0.0:8000
HTTP OPTIONS /api/users/login/ 200 [0.01, 172.18.0.1:43808]
HTTP OPTIONS /api/users/login/ 200 [0.01, 172.18.0.1:43808]
HTTP POST /api/users/login/ 200 [0.28, 172.18.0.1:43808]
HTTP POST /api/users/login/ 200 [0.28, 172.18.0.1:43808]
HTTP OPTIONS /api/users/patient-dashboard/ 200 [0.01, 172.18.0.1:43808]
HTTP OPTIONS /api/users/patient-dashboard/ 200 [0.01, 172.18.0.1:43808]
HTTP GET /api/users/patient-dashboard/ 200 [0.03, 172.18.0.1:43808]
HTTP GET /api/users/patient-dashboard/ 200 [0.03, 172.18.0.1:43808]
HTTP OPTIONS /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.01, 172.18.0.1:43808]
HTTP OPTIONS /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.01, 172.18.0.1:43808]
HTTP GET /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.06, 172.18.0.1:43808]
HTTP GET /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.06, 172.18.0.1:43808]
HTTP GET /api/users/patient-dashboard/ 200 [0.02, 172.18.0.1:43808]
HTTP GET /api/users/patient-dashboard/ 200 [0.02, 172.18.0.1:43808]
HTTP GET /api/users/specialties/ 200 [0.02, 172.18.0.1:43808]
HTTP GET /api/users/specialties/ 200 [0.02, 172.18.0.1:43808]
HTTP GET /api/users/patient-dashboard/ 200 [0.03, 172.18.0.1:43808]
HTTP GET /api/users/patient-dashboard/ 200 [0.03, 172.18.0.1:43808]
HTTP GET /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.03, 172.18.0.1:43808]
HTTP GET /api/users/doctor-available-slots/2/2024-09-09/ 200 [0.03, 172.18.0.1:43808]
HTTP GET /api/users/patient-dashboard/ 200 [0.02, 172.18.0.1:43808]
HTTP GET /api/users/patient-dashboard/ 200 [0.02, 172.18.0.1:43808]
HTTP GET /api/users/specialties/ 200 [0.02, 172.18.0.1:43808]
HTTP GET /api/users/specialties/ 200 [0.02, 172.18.0.1:43808]
HTTP POST /api/users/login/ 200 [0.21, 172.18.0.1:43808]
HTTP POST /api/users/login/ 200 [0.21, 172.18.0.1:43808]
HTTP OPTIONS /api/users/doctor-dashboard/ 200 [0.00, 172.18.0.1:43808]
HTTP OPTIONS /api/users/doctor-dashboard/ 200 [0.00, 172.18.0.1:43808]
HTTP GET /api/users/doctor-dashboard/ 200 [0.03, 172.18.0.1:43808]
HTTP GET /api/users/doctor-dashboard/ 200 [0.03, 172.18.0.1:43808]
HTTP OPTIONS /api/users/doctor-availability/ 200 [0.01, 172.18.0.1:43808]
HTTP OPTIONS /api/users/doctor-availability/ 200 [0.01, 172.18.0.1:43808]
HTTP GET /api/users/doctor-availability/ 200 [0.03, 172.18.0.1:43808]
HTTP GET /api/users/doctor-availability/ 200 [0.03, 172.18.0.1:43808]
HTTP GET /api/users/doctor-dashboard/ 200 [0.03, 172.18.0.1:43808]
HTTP GET /api/users/doctor-dashboard/ 200 [0.03, 172.18.0.1:43808]
Watching for file changes with StatReloader
Watching for file changes with StatReloader
HTTP/2 support not enabled (install the http2 and tls Twisted extras)
Configuring endpoint tcp:port=8000:interface=0.0.0.0
Listening on TCP address 0.0.0.0:8000
